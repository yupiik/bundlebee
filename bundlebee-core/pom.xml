<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2021 - present - Yupiik SAS - https://www.yupiik.com
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>bundlebee</artifactId>
    <groupId>io.yupiik</groupId>
    <version>1.0.32-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>bundlebee-core</artifactId>
  <name>BundleBee :: Core</name>

  <properties>
    <image.base>ossyupiik/java:21.0.7@sha256:82b9c52317c9d0ea1033bd022a1a44650583f99cc909ca48bdb771db60da0604</image.base>
    <image.workdir>/opt/yupiik/bundlebee/${project.artifactId}</image.workdir>
    <image.version>${project.version}</image.version>
    <image.registry /> <!-- when pushing remotely: -Dimage.registry=docker.io/ for ex -->
    <image.name>${image.registry}yupiik/bundlebee:${image.version}</image.name>
    <image.url>${project.scm.url}</image.url>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.geronimo.arthur</groupId>
      <artifactId>arthur-api</artifactId>
      <version>${arthur.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency> <!-- todo: replace it by something lighter without the mapping feature? -->
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jcdi_2.0_spec</artifactId>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-annotation_1.3_spec</artifactId>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-atinject_1.0_spec</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-interceptor_1.2_spec</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.config</groupId>
      <artifactId>microprofile-config-api</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-json_1.1_spec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jsonb_1.0_spec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.openwebbeans</groupId>
      <artifactId>openwebbeans-se</artifactId>
      <version>${owb.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.config</groupId>
      <artifactId>geronimo-config-impl</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.johnzon</groupId>
      <artifactId>johnzon-jsonb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.yupiik.logging</groupId>
      <artifactId>yupiik-logging-jul</artifactId>
      <version>${yupiik-logging.version}</version>
    </dependency>

    <dependency>
      <groupId>io.yupiik.maven</groupId>
      <artifactId>codec-core</artifactId>
      <version>${yupiik-tools.version}</version>
    </dependency>

    <dependency> <!-- for now experimental (we bridged the plain placeholder to hb) -->
      <groupId>io.yupiik.fusion</groupId>
      <artifactId>fusion-handlebars</artifactId>
      <version>1.0.16</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>io.yupiik.fusion</groupId>
          <artifactId>fusion-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.openwebbeans</groupId>
      <artifactId>openwebbeans-junit5</artifactId>
      <version>${owb.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.nashorn</groupId>
      <artifactId>nashorn-core</artifactId>
      <version>15.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.talend.sdk.component</groupId>
      <artifactId>component-runtime-http-junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- for http-junit self signed cert generation on java 17 -->
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- for talend mock http server -->
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>templating-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>filter-src</id>
            <goals>
              <goal>filter-sources</goal>
            </goals>
            <configuration>
              <encoding>UTF-8</encoding>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>fat</shadedClassifierName>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <dependencyReducedPomLocation>${project.build.directory}/reduced-pom.xml</dependencyReducedPomLocation>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>io.yupiik.bundlebee.core.BundleBee</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                <transformer implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                  <resource>META-INF/beans.xml</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.properties.OpenWebBeansPropertiesTransformer" />
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/LICENSE.txt</exclude>
                    <exclude>META-INF/LICENSE</exclude>
                    <exclude>META-INF/NOTICE.txt</exclude>
                    <exclude>META-INF/NOTICE</exclude>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                    <exclude>META-INF/DEPENDENCIES</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/build/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      <!--
      NOTE: can need -DsendCredentialsOverHttp=true for (test) http registries

      docker (local): mvn package jib:dockerBuild -Dmaven.test.skip=true
      remote: mvn package jib:build -Dimage.registry=xxxx/ -Dmaven.test.skip=true
      -->
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>3.4.6</version>
        <configuration>
          <containerizingMode>packaged</containerizingMode>
          <from>
            <image>${image.base}</image>
          </from>
          <to>
            <image>${image.name}</image>
          </to>
          <container>
            <appRoot>${image.workdir}</appRoot>
            <workingDirectory>${image.workdir}</workingDirectory>
            <extraClasspath>${image.workdir}/custom/*:${image.workdir}/custom</extraClasspath>
            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
            <jvmFlags>
              <jvmFlag>-Djava.util.logging.manager=io.yupiik.logging.jul.YupiikLogManager</jvmFlag>
              <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
              <jvmFlag>-Djdk.serialFilter=oracle.sql.converter.*;!*</jvmFlag>
              <jvmFlag>-Djdk.jndi.object.factoriesFilter=!*</jvmFlag>
              <jvmFlag>-Dcom.sun.jndi.ldap.object.trustSerialData=false</jvmFlag>
              <jvmFlag>-Dorg.apache.webbeans.spi.deployer.skipValidations=true</jvmFlag>
              <jvmFlag>-Dyupiik.build.timestamp=${maven.build.timestamp}</jvmFlag>
            </jvmFlags>
            <environment>
              <LANG>en_US.UTF-8</LANG>
            </environment>
            <labels>
              <org.opencontainers.image.revision>${git.commit.id}</org.opencontainers.image.revision>
              <org.opencontainers.image.ref.name>${git.branch}</org.opencontainers.image.ref.name>
              <org.opencontainers.image.source>${git.remote.origin.url}</org.opencontainers.image.source>
              <org.opencontainers.image.created>${maven.build.timestamp}</org.opencontainers.image.created>
              <org.opencontainers.image.authors>Yupiik</org.opencontainers.image.authors>
              <org.opencontainers.image.vendor>Yupiik</org.opencontainers.image.vendor>
              <org.opencontainers.image.url>https://yupiik.io</org.opencontainers.image.url>
              <org.opencontainers.image.documentation>https://yupiik.io/bundlebee/</org.opencontainers.image.documentation>
              <org.opencontainers.image.title>${project.parent.name}</org.opencontainers.image.title>
              <org.opencontainers.image.description>${project.parent.description}</org.opencontainers.image.description>
              <org.opencontainers.image.version>${project.version}</org.opencontainers.image.version>
              <com.yupiik.maintainer>Yupiik &lt;support@yupiik.com&gt;</com.yupiik.maintainer>
              <com.yupiik.build-date>${maven.build.timestamp}</com.yupiik.build-date>
              <com.yupiik.application>${project.artifactId}</com.yupiik.application>
              <com.yupiik.name>${project.artifactId}</com.yupiik.name>
              <com.yupiik.description>${project.description}</com.yupiik.description>
              <com.yupiik.vendor>Yupiik</com.yupiik.vendor>
              <com.yupiik.params>_JAVA_OPTIONS=...</com.yupiik.params>
              <com.yupiik.cmd>docker run --user 1000 --detach ${image.name} &lt;args&gt;</com.yupiik.cmd>
            </labels>
          </container>
          <outputPaths>
            <imageJson>${project.build.directory}/jib-image.json</imageJson>
          </outputPaths>
        </configuration>
      </plugin>
      <plugin> <!-- mvn package arthur:native-image arthur:docker -DskipTests  -->
        <groupId>org.apache.geronimo.arthur</groupId>
        <artifactId>arthur-maven-plugin</artifactId>
        <configuration>
          <to>${image.name}-native</to>
          <main>io.yupiik.bundlebee.core.BundleBee</main>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>

      <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
          <plugin> <!-- mvn package -Pnative -DskipTests  -->
            <groupId>org.apache.geronimo.arthur</groupId>
            <artifactId>arthur-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>native</id>
                <phase>package</phase>
                <goals>
                  <goal>native-image</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>krew</id>
      <build>
        <plugins>
          <!-- enable to work with krew kubectl plugin manager (zip + manifest filtering) -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>kubectl-bundlebee-zip</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/kubectl-bundlebee.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.nicoulaj.maven.plugins</groupId>
            <artifactId>checksum-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>krew-sha256</id>
                <phase>package</phase>
                <goals>
                  <goal>files</goal>
                </goals>
                <configuration>
                  <csvSummary>false</csvSummary>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>${project.build.finalName}-kubectl-bundlebee.zip</include>
                      </includes>
                    </fileSet>
                  </fileSets>
                  <algorithms>
                    <algorithm>SHA-256</algorithm>
                  </algorithms>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.honton.chas</groupId>
            <artifactId>readfiles-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>read-kubectl-bundlebee-sha256</id>
                <phase>package</phase>
                <goals>
                  <goal>readfiles</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${project.build.directory}/${project.build.finalName}-kubectl-bundlebee.zip.sha256</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>copy-krew-manifest</id>
                <phase>verify</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.basedir}/target/krew</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/krew</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-krew</id>
                <phase>verify</phase>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <configuration>
                  <artifacts>
                    <artifact>
                      <file>${project.basedir}/target/krew/manifest.yaml</file>
                      <type>yaml</type>
                      <classifier>krew.manifest</classifier>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
