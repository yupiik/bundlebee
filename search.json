[{"lang":"en","lvl2":"Configuration","text":"Adds a service to the alveoli available in the defined folder. It is a skaffolding command.\nName: add-alveolus.\nAlveolus name.\nDeployment image.\nManifest to add the aveolus inside. Default value: ./bundlebee/manifest.json\nIf false, generated files already existing will be skipped. Default value: false\nAlveolus/template type. web will create a ConfigMap, Deployment and Service. Default value: web","title":"Add-alveolus","url":"//www.yupiik.io/bundlebee/commands/add-alveolus.configuration.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Apply/deploy a set of descriptors from a root one.\nName: apply.\nAlveolus name to deploy. When set to auto, it will deploy all manifests found in the classpath. If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto\nFor descriptors with await = true the max duration the test can last. Default value: 60000\nEnables to exclude descriptors from the command line. none to ignore. Value is comma separated. Note that using this setting, location is set to * so only the name is matched. Default value: none\nEnables to exclude locations (descriptor is set to *) from the command line. none to ignore. Value is comma separated. Default value: none\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto\nIf true, bundlebee.* labels will be injected into the descriptors. This is required for rollback command to work. Default value: true\nIf true, a bundlebee.timestamp label will be injected into the descritors with current date before applying the descriptor. Default value: true\nManifest to load to start to deploy (a file path or inline). This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip\nIf true, each descriptor installation awaits previous ones instead of being concurrent. Enable an easier debugging for errors. Default value: false\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Apply","url":"//www.yupiik.io/bundlebee/commands/apply.configuration.html"},{"lang":"en","text":"elasticsearch-local (io.yupiik.alveoli:elasticsearch-local:1.0.16): setup \"elasticsearch-local\" which runs an Elasticsearch instance usable by other applications.\ngrafana-simple (io.yupiik.alveoli:grafana-simple:1.0.16): simple Grafana instance, note we preconfigure it with Loki, Prometheus and Zipkin alveoli, ensure to override the configuration if you don’t use them.\nloki-simple (io.yupiik.alveoli:loki-simple:1.0.16): loki setup to aggregate service logs using promtail, the prometheus for logs.\nminio-local (io.yupiik.alveoli:minio-local:1.0.16): setup \"minio-local\" which runs a MinIO instance usable by other applications.\nmonitoring-alveolus (io.yupiik.alveoli:monitoring-alveolus:1.0.16): includes loki+prometheus+zipkin+grafana at once.\npostgres-local (io.yupiik.alveoli:postgres-local:1.0.16): setup \"postgres-local\" which runs a PostgreSQL instance usable by other applications.\nprometheus-simple (io.yupiik.alveoli:prometheus-simple:1.0.16): prometheus local/dev setup. Will be available on http://$(PROMETHEUS_SERVICE_SERVICE_HOST):$(PROMETHEUS_SERVICE_SERVICE_PORT).\nzipkin-simple (io.yupiik.alveoli:zipkin-simple:1.0.16): zipkin in memory setup. Will be available on http://$(ZIPKIN_SERVICE_SERVICE_HOST):$(ZIPKIN_SERVICE_SERVICE_PORT). For example http://$(ZIPKIN_SERVICE_SERVICE_HOST):$(ZIPKIN_SERVICE_SERVICE_PORT)/api/v2/spans to push spans through HTTP.","title":"Available Alveoli","url":"//www.yupiik.io/bundlebee/alveoli.html"},{"lang":"en","text":"add-alveolus: adds a service to the alveoli available in the defined folder. It is a skaffolding command.\napply: apply/deploy a set of descriptors from a root one.\nbuild: build a project.\ncheck-update: check if a new version is available.\ncipher-password: cipher a password to put it in ~/.m2/settings.xml servers (useful for deploy command for example).\ncompletion: execute bash completion. Should be setup in your ~/.bashrc or ~/.profile file to be active.\ncreate-master-password: generate a master password if none exist (in ~/.m2/settings-security.xml).\ndelete: delete an alveolus deployment by deleting all related descriptors.\ndeploy: build and deploy a project. It inherits from most configuration of build command and adds remote repository settings.\nhelp: print help for all available commands.\nhttp: execute a HTTP request over Kubernetes client. This is mainly for not yet existing commands and to reuse all the client auto-configuration.\ninspect: inspect an alveolus, i.e. list the descriptors to apply.\nnew: creates a new project.\nprocess: process all descriptors - as in an apply command - from a root descriptor. If output is set, it dumps the descriptors in this directory. Don’t forget to set --kubeconfig explicit to ignore kube setup.\nrollback: rollback an alveolus deployment.\nrun: tries to run the recipe as plain forks on the host. In this mode, Bundlebee is used as the orchestrator. It is highly recommended to only do that with application matching the bundlebee command environment.\nversion: shows the application version.\nversions: list versions for an artifact to know which ones are available.","title":"Available commands","url":"//www.yupiik.io/bundlebee/commands.html"},{"lang":"en","lvl2":"Configuration","text":"Build a project.\nName: build.\nBundle artifactId.\nProject to build. Default value: target\nIf true it will be added to your local maven repository. Default value: true\nProject to build. Default value: .\nBundle groupId.\nBundle version.","title":"Build","url":"//www.yupiik.io/bundlebee/commands/build.configuration.html"},{"lang":"en","lvl2":"Declaration\nMojo\nExample","text":"All BundleBee commands have their mojo.\nThey are named exactly the same way (i.e. to execute apply command you can run bundlebee:apply mojo).\nThe configuration is the same than the ones of the CLI so you can review the commands documentation or use your IDE completion.\nMore information on mojos documentation.\nHere a sample to generate a web alveolus in a maven module (note it can be defined in parent pom):\ninitialize a bundlebee folder in target/classes/bundlebee (default)\nadd a web (default type) alveolus for this module\nensure to set the image name for the module, it is required\nThis will enable to bundle the alveolus in the jar and then rely on it in a manifest.json.\neven if the add-alveolus goal will enable you to deploy your web service, it is recommended to customize the configuration (at least the config map). This goal (add-alveolus) is mainly to get started but once you got your manifest.json written you can remove the plugin execution until you write a custom io.yupiik.bundlebee.core.command.AddAlveolusTypeHandler added in plugin dependencies.","title":"BundleBee Maven Plugin","url":"//www.yupiik.io/bundlebee/maven-plugin.html"},{"lang":"en","lvl2":"Installation\nConfiguration\nDelete/Apply an alveolus\nAppendix, all in one installation","lvl3":"Global configuration","text":"this module is new and can change.\nBundlebee operator provides a Kubernetes operator which creates a custom resource of type Alveolus. This way you can deploy directly an alveolus and the operator will take care to deploy it. Similarly, if you delete the alveolus, the operator will delete it all.\nin current version there is no catch up logic so if the deletion fails you should re-run it or finish to clean up the data manually (this is on the roadmap).\nas of today, the image is not yet available on docker hub (>= 1.0.14) so you will need to build it yourself. This can be done 1. cloning the project, 2. building it with mvn install -DskipTests -Pdocker, 3. push the yupiik/bundlebee/operator:<version> on your kubernetes image registry.\nYou can install the Bundlebee operator using bundlebee client on your machine (or the maven plugin/fat jar if you prefer): bundlebee --from io.yupiik:bundlebee-operator:<version> --alveolis io.yupiik:bundlebee-operator:<version.\nThe bundlebee alveolus installation supports the following configuration:\nscope of the operator. Default value: Namespaced.\nnamespace of the operator. Default value: default.\nis dry run mode enabled (for testing purposes). Default value: false.\nhow many threads are allocated to the http client. Default value: 8.\ncan the operator download alveoli or should it use the local provisionned maven repository only (kind of explicit enablement of dependencies). Default value: false.\ndoes the operator log or not the HTTP requests/responses it does (for debug purposes). Default value: false.\nAlternatively you can use the following \"all in file\" JSON file you can use with kubectl apply -f <bundlebee.operator.install.json>. See all in one descriptor.\nif you don’t install it in default namespace, don’t hesitate to customize KUBECONFIG value in the all in one descriptor or use placeholders for the bundlebee installation. You can also desire to customize the roles affected to the ServiceAccount mounted in the operator Deployment to give it more or less permissions on what it can deploy/delete.\nThe operator configuration is globally the same than standard Bundlebee with a small difference: the global configuration is configured once - in the Deployment of the installation part - and only command configuration can be set in the Alveolus descriptors.\nWhere to store the internal operator state to not restart from scratch when restarting. Default value: /opt/yupiik/state/bundlebee-operator.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto\nTo apply a custmo Alveolus you can write a descriptor like:\nUse apiVersion bundlebee.yupiik.io/v1,\nUse kind Alveolus,\nmetadata object is a standard one so you can set a name, labels, etc…,\nargs are the options of the apply command for this deployment (without the global configuration indeed).\nyou can check apply documentation to see all the options available.","title":"Bundlebee K8s Operator","url":"//www.yupiik.io/bundlebee/operator.html"},{"lang":"en","lvl2":"Goals","text":"BundleBee command executable from Maven environment.\nadd-alveolus: Adds a service to the alveoli available in the defined folder. It is a skaffolding command.\napply: Apply/deploy a set of descriptors from a root one.\nbuild: Build a project.\ncheck-update: Check if a new version is available. IMPORTANT: this command only works for amd64 linux machines.\ncipher-password: Cipher a password to put it in ~/.m2/settings.xml servers (useful for deploy command for example).\ncompletion: Execute bash completion. Should be setup in your ~/.bashrc or ~/.profile file to be active. The result will be the list of proposal you can inject into COMPREPLY array. To set it up you can add this snippet to your .bashrc (assumes you uses the bundlebee linux binary and it is in your $PATH otherwise replace bundlebee by your own launching script): [source,bash] ---- complete -o default -o nospace -C \"bundlebee completion\" bundlebee ----\ncreate-master-password: Generate a master password if none exist (in ~/.m2/settings-security.xml)\ndelete: Delete an alveolus deployment by deleting all related descriptors. bundlebee.delete.propagationPolicy can be set in descriptor(s) metadata to force default CLI behavior for this descriptor.\ndeploy: Build and deploy a project. It inherits from most configuration of build command and adds remote repository settings.\nhttp: Execute a HTTP request over Kubernetes client. This is mainly for not yet existing commands and to reuse all the client auto-configuration.\ninspect: Inspect an alveolus, i.e. list the descriptors to apply.\nnew: Creates a new project.\nprocess: Process all descriptors - as in an apply command - from a root descriptor. If output is set, it dumps the descriptors in this directory. Don’t forget to set --kubeconfig explicit to ignore kube setup.\nrollback: Rollback an alveolus deployment. The strategy is the following one: * Load current alveolus (recursively) to list all descriptors in \"current\" version * Find previous version if not explicit (by choosing the first previous on in the list of available version on maven repository) * Run delete command for current version * Run apply command for previous version IMPORTANT: this command only uses releases when it guesses the versions, it does not handles SNAPSHOTs. If you want to rollback to a snapshot, ensure to configure previous* properties. TIP: this is equivalent to apply and delete commands successfully. For now it is recommended to do both manually.\nversion: Shows the application version.\nversions: List versions for an artifact to know which ones are available.","title":"Bundlebee Maven Plugin","url":"//www.yupiik.io/bundlebee/maven/bundlebee-maven-plugin.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Check if a new version is available.\nthis command only works for amd64 linux machines.\nName: check-update.\nBundlebee binary artifactId. Default value: bundlebee-core\nBundlebee binary classifier. Default value: Linux-amd64\nBundlebee binary groupId. Default value: io.yupiik\nWhere to install bundlebee if update is true. Default value: {{user.home}}/.yupiik/bundlebee/bin/bundlebee\nRepository bundlebee is supposed to be, generally Apache Maven central. Default value: https://repo.maven.apache.org/maven2\nBundlebee binary type (extension) in maven coordinates. Default value: bin\nIf a new version is available, should it update installLocation. Default value: false\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Check-update","url":"//www.yupiik.io/bundlebee/commands/check-update.configuration.html"},{"lang":"en","lvl2":"Configuration","text":"Cipher a password to put it in ~/.m2/settings.xml servers (useful for deploy command for example).\nName: cipher-password.\nPassword value to cipher (auto generates a random one). Default value: auto","title":"Cipher-password","url":"//www.yupiik.io/bundlebee/commands/cipher-password.configuration.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Execute bash completion. Should be setup in your ~/.bashrc or ~/.profile file to be active. The result will be the list of proposal you can inject into COMPREPLY array.\nTo set it up you can add this snippet to your .bashrc (assumes you uses the bundlebee linux binary and it is in your $PATH otherwise replace bundlebee by your own launching script):\nName: completion.\nMatches bash COMP_LINE environment variable, represents the current command line.\nMatches bash COMP_POINT environment variable, represents the index of the cursor position. Default value: -1\nIf true logger will be used instead of stdout. Default value: false\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Completion","url":"//www.yupiik.io/bundlebee/commands/completion.configuration.html"},{"lang":"en","lvl2":"Create your first template\nUse your first template","text":"feature available since Bundlebee 1.0.14.\nA template is an alveolus which is not intended to be installed by itself in general - even if it is possible. It relies on placeholders to be contextualized and, in general, placeholders are provided in the context if a contextual alveolus which represents the consumer.\nBut why using templates? Most of the time, the Kubernetes flavor you are using (OpenShift for example or a cloud specific instance or with a particular service mesh stack) is relying on specific metadata/labels etc… Your company can also standardize the way to write kubernetes descriptors. All that make it quite hard to define generic and maintainable descriptors generally speaking but it also makes it quite repetitive to write it for each microservice in your own context.\nTo solve that issue, Bundlebee enables you to write a generic contextual alveolus (a deployment, a service etc…) and bind placeholders from another alveolus.\nthe context is the alveolus and not the dependency to ensure the binding is more obvious and not ultra nested. it can require you to split a bit the definition in the manifest.json but it is to simplify the maintenance.\nTo create a template, just define a standard alveolus with placeholders in descriptors. For example:\nHere we can see we just defined an alveolus requiring the placeholders:\nservice.name,\nservice.app,\nservice.type,\nservice.port.\nthis is a valid alveolus, if you provide all the placeholders you can install it directly but it is not recommended to ensure it is reproducible.\nTo use the template previously defined, just define another alveolus which binds the required placeholders in its definition:\nimport the template in the alveolus,\nBinds the placeholders of the imported template.\nif your alveolus imports a dependency reimporting the template, the placeholders nesting will be respected which means the context is always the deepest one.","title":"Create your own templates","url":"//www.yupiik.io/bundlebee/template.html"},{"lang":"en","lvl2":"Configuration","text":"Generate a master password if none exist (in ~/.m2/settings-security.xml)\nName: create-master-password.\nMaster password value, if auto it will be generated. Default value: auto","title":"Create-master-password","url":"//www.yupiik.io/bundlebee/commands/create-master-password.configuration.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Delete an alveolus deployment by deleting all related descriptors. bundlebee.delete.propagationPolicy can be set in descriptor(s) metadata to force default CLI behavior for this descriptor.\nName: delete.\nAlveolus name to rollback (in currently deployed version). When set to auto, it will look up all manifests found in the classpath (it is not recommended until you perfectly know what you do). If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto\nIf an integer > 0, how long (ms) to await for the actual deletion of components, default does not await.\nFor descriptors with await = true the max duration the test can last. It is per descriptor with await true and independent of awaitTimeout. Default value: 60000\nEnables to exclude descriptors from the command line. none to ignore. Value is comma separated. Note that using this setting, location is set to * so only the name is matched. Default value: none\nEnables to exclude locations (descriptor is set to *) from the command line. none to ignore. Value is comma separated. Default value: none\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto\nIf set it will be added on REST calls to force a custom grace period (in seconds). Setting it to 0 enables to delete faster objects.\nManifest to load to start to find the alveolus. This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Delete","url":"//www.yupiik.io/bundlebee/commands/delete.configuration.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Build and deploy a project. It inherits from most configuration of build command and adds remote repository settings.\nName: deploy.\nBundle artifactId.\nWhere to build (for build/temp files). Default value: target\nIf true it will be added to your local maven repository too. Default value: true\nProject to build. Default value: .\nIf true it enables to upload an artifact even if already present. When auto it enables it for snapshots but not for releases. Default value: auto\nBundle groupId.\nIf not skip it will deploy the artifact on a remote repository (nexus v2 or v3). Syntax must be a URL pointing to the REST API (base URL). If you don’t set the userinfo (username:password) in the URL it will be looked up in your settings.xml - potentially ciphered - using the hostname as serverId until you force it with --serverId. Default value: skip\nNexus repository. It is the repository name the artifact(s) will be uploaded to. If auto, it will be maven-releases if the version is a release one and maven-snapshots otherwise. Default value: auto\nServerId to lookup from your maven settings.xml for remote deployment if enabled (nexus authentication).\nBundle version.\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Deploy","url":"//www.yupiik.io/bundlebee/commands/deploy.configuration.html"},{"lang":"en","lvl2":"Installation\nCreate your first alveolus\nGoing futher (K8s operator)\nDefine custom templates\nTesting your alveoli with JUnit 5","lvl3":"Java Mode\nBinary\nPre-requisite\nStart with a maven project\nStart from scratch (without Java and Maven)","text":"Ensure to use java >= 11.0.7 (previous Java 11 versions can work but have an issue with TLS HTTP client you can hit).\nDownload the bundlebee-core fat jar on https://repo.maven.apache.org/maven2/io/yupiik/bundlebee-core/ (ensure to take -fat.jar artifact).\nYou can now run it with the command: java -jar bundlebee-core-<version>-fat.jar.\nas of today, no release of BundleBee are on central yet so this script does not yet work.\nthis only works for linux amd64 computers.\nsince 1.0.3, once installed this way (and your PATH variable updated to include bundlebee) you can use check-update command to check if a new version is available: bundlebee check-update [--update true]. The --update true option enables to automatically replace the binary if needed, not specifying it will just log if a new version can be downloaded.\nBundleBee assumes it is installed itself indeed but depending how you package your alveolus it can require Java (>= 8) and Maven. If they are not installed on your system, we encourage you to use sdkman to do so.\nthis can be replaced by any zip packager and is not a strong requirement.\nThere are a ton of ways to create a maven projects but here is the simplest one:\nThen you can go in my-app-alveolus/. You can run mvn package to ensure your java/maven setup is correct.\nAt that stage we can start working on our alveolus but if you want to be \"purist\" you can clean up the default skaffolded project: rm -Rf src/test/ src/main/java/.\nTo start working on our alveolus, we will create src/main/resources/bundlebee folder: mkdir -p src/main/resources/bundlebee.\nAt that stage your project should look like:\nTo describe an application, you have to create a manifest.json file in this bundlebee folder:\nCreates an alveolus named \"hello\",\n\"hello\" alveolus will use as descriptor (.yaml) \"hello-world.yaml\" which will be found in src/main/resources/bundlebee/kubernetes,\nReferences Bundlebee base folder because we are deploying in exploded mode (and not in a packaged jar).\nThen add the referenced Kubernetes descriptor in kubernetes subfolder:\nHere nothing changes from a \"normal\" .yaml used with kubectl.\nNow you can deploy this executing bundlebee apply --alveolus hello --manifest ./src/main/resources/bundlebee/manifest.json.\nAnd that’s it, now hello world application should be up and running in your Kubernetes cluster.\nit is more than encouraged to name the kubernetes descriptor based on the project unique identifier. For example <groupId>.<artifactId>.<alveolus_name>.yaml. It will avoid conflicts when multiple alveolus are in the same classpath using native java mode and not file driven mode.\nYou could also have used the bundlebee-maven-plugin, simply add it in the plugins section of the pom.xml :\nThen you can deploy this executing mvn bundlebee:apply@hello-world.\nIn this part we will reuse the descriptors of Start with maven section so we will just show how to bundle without Java/Maven the alveolus.\nThe overall goal is to create a zip containing the manifest.json and the Kubernetes descriptor. Here is a small script helping to do that:\nThe name of the project (will create a root directory with this name)\nCreate the alveolus structure\nNow you can copy the descriptors as in Start with maven section in my-app-alveolus/bundlebee/ folder.\nOnce done we just have to bundle it as a zip. One option on UNIx system is to use this command:\nReuse the same setup than in previous script\nCreate a zip containing the alveolus structure using zip command\nAnd that’s it.\nthis trick to create a zip can be adapted to any language (javascript, typescript, go, python, ruby, …) and enables to bundle an alveolus in any build tool very easily.\nTo learn how to deploy directly an Alveolus on Kubernetes you can check out our Operator documentation.\nYou can use an alveolus as a template for others providing contextual placeholders. Learn more about this in template documentation.\nBundlebee provides a light testing framework integrated with JUnit 5 to ease the validation of alveoli. Learn more about this in junit5 documentation.","title":"Getting Started","url":"//www.yupiik.io/bundlebee/getting-started.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Print help for all available commands.\nName: help.\nIf false args are not shown, enable a lighter output. Default value: true\nWhich command to show help for. If not set it will show all commands.\nIf false shared configuration (by all commands) is not shown. Default value: true\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Help","url":"//www.yupiik.io/bundlebee/commands/help.configuration.html"},{"lang":"en","lvl2":"Overall architecture\nManifest\nDeployment and Dependency Management\nCustomize descriptors\nDeploy a dependency (or descriptor) conditionally\nFilter manifest at command time\nWindows and CLI","lvl3":"Manifest Descriptor\nJSON-Schema\nMore placeholders","text":"One of the BundleBee goals is to inherit from the well known and supported Apache Maven infrastructure. In other words, the goal is to be able to reuse Maven registries (central, custom nexus, artifactory, …) to store application descriptors. It also leverage the well know java packaging (jar or zip) to ensure a strong storage reliability in these systems.\nOne direct benefit is that it becomes very easy to have an immutable system once deployed and therefore a better tracability of what is deployed.\nOverall, BundleBee will manipulate what we call alveolus which are basically just a set of descriptors. An alveolus is a zip or a jar which is structured this way:\nA bundlebee folder contains all the descriptors\nA manifest.json contains the list of application or library this alveolus provides\nA kubenetes folder contains the list of descriptors used by alveoli\nManifest is the central point of the system. It provides the unique identifier of your recipe (application/library) and what to do to set it up.\nHere is its configuration specification:\nBundleBee manifest descriptor.\nName\nJSON Name\nType\nDescription\nManifest.alveoli\nalveoli\narray of object\nList of described applications/libraries.\nManifest.requirements\nrequirements\nPre manifest execution checks (bundlebee version typically). Avoids to install using a bundlebee version not compatible with the alveoli. Can be fully omitted.\nchainDependencies\nbool\nShould dependencies be installed one after the other or in parallel (default). It is useful when you install a namespace for example which must be awaited before next dependencies are installed.\nname\nstring\nName of the alveolus (recipe). It must be unique accross the whole classpath. Using maven style identifier, it is recommended to name it <groupId>:<artifactId>:<version> using maven filtering but it is not enforced.\nversion\nIf name does not follow <groupId>:<artifactId>:<version> naming (i.e. version can’t be extracted from the name) then you can specify the version there. Note that if set, this is used in priority (explicit versus deduced).\nAlveolus.dependencies\ndependencies\nDependencies of this alveolus. It is a way to import transitively a set of descriptors.\nAlveolus.descriptors\ndescriptors\nList of descriptors to install for this alveolus. This is required even if an empty array.\nAlveolus.excludedDescriptors\nexcludedDescriptors\nList of descriptors to ignore for this alveolus (generally coming from dependencies).\nAlveolus.patches\npatches\nPatches on descriptors. It enables to inject configuration in descriptors by patching (using JSON-Patch or plain interpolation with ${key} values) their JSON representation. The key is the descriptor name and each time the descriptor is found it will be applied.\nplaceholders\nobject\nLocal placeholders for this particular alveolus and its dependencies. It is primarly intended to be able to create a template alveolus and inject the placeholders inline.\nlocation\nWhere to find the alveolus. Note it will ensure the jar is present on the local maven repository.\nAlveolus name.\nDescriptor.includeIf\nincludeIf\nConditions to include this dependency. Enables for example to have an environment variable enabling part of the stack (ex: MONITORING=true)\nawait\nIf set to true, apply/delete commands will await the actual creation of the resource (GET /x returns a HTTP 200) before continuing to process next resources. It is useful for namespaces for example to ensure applications can be created in the newly created namespace. It avoids to run and rerun apply command in practise. For more advanced tests, use awaitConditions.\nawaitOnDelete\nOn delete we rarely want to check the resource exists before but in these rare case you can set this toggle to true.\ninterpolate\nIf set to true, it will interpolate the descriptor just before applying it - i.e. after it had been patched if needed. You can use --<config-key> <value> to inject bindings set as {{config-key:-default value}}.\nOptional, if coming from another manifest, the dependency to download to get the alveolus.\nName of the descriptor to install. For kubernetes descriptors you can omit the .yaml extension.\ntype\nType of this descriptor. For now only kubernetes is supported. It also defines in which folder under bundlebee the descriptor(s) are looked for from its name.\nDescriptor.awaitConditions\nawaitConditions\nTest to do on created/destroyed resources, enables to synchronize and await kubernetes actually starts some resource. For apply and delete commands, descriptorAwaitTimeout is still applied. Note that if you use multiple array entries for the same command it will be evaluated with an AND.\nConditions to include this descriptor.\noperator\nOperator to combine the conditions. Potential values: ANY (At least one condition must match.),ALL (All conditions must match.).\nConditions.conditions\nconditions\nList of condition to match according operator.\nkey\nExpected key. If empty/null condition is ignored. If read value is null it defaults to an empty string.\nnegate\nShould the condition be reversed (ie \"not in this case\").\nType of condition. Potential values: ENV (Key is read is process environment variables.),SYSTEM_PROPERTY (Key is read is process system properties.).\nvalue\nExpected value. If empty/null, true is assumed. Note that empty is allowed.\ncommand\nCommand to apply these conditions to, if not set it will be applied on apply command only. Note that for now only apply and delete commands are supported, others will be ignored.\nAwaitConditions.conditions\nconditionType\nWhen condition type is STATUS_CONDITION it is the expected type of the condition. This is ignored when condition type is JSON_POINTER.\noperatorType\nThe operation to evaluate if this condition is true or not. (for type=JSON_POINTER). Potential values: EXISTS (JSON Pointer exists model.),MISSING (JSON Pointer does not exist in the resource model.),EQUALS (JSON Pointer value is equal to (stringified comparison) value.),NOT_EQUALS (JSON Pointer is different from the provided value.),EQUALS_IGNORE_CASE (JSON Pointer value is equal (ignoring case) to (stringified comparison) value.),NOT_EQUALS_IGNORE_CASE (JSON Pointer is different (ignoring case) from the provided value.),CONTAINS (JSON Pointer contains the configured value.).\npointer\nJSON Pointer to read from the resource. It can for example be on /status/phase to await a namespace creation. (for type=JSON_POINTER).\nType of condition. Potential values: JSON_POINTER (JSON Pointer evaluation (fully custom).),STATUS_CONDITION (Evaluate items in /status/conditions.).\nWhen condition type is JSON_POINTER and operatorType needs a value (EQUALS for example), the related value. It can be Active if you test namespace /status/phase for example. When condition type is STATUS_CONDITION it is the expected status.\nThe container of the descriptor (maven coordinates generally).\nName of the descriptor (as declared, ie potentially without the extension).\ndescriptorName\nThe descriptor to patch. It can be any descriptor, including transitive ones. It can be * to patch all descriptors (/metadata/label/app for example) or regex:<java pattern> to match descriptor names with a regex.\nIf set to true, it will interpolate the patch from the execution configuration which means you can use --<config-key> <value> to inject bindings too. An interesting interpolation is the ability to extract the ip/host of the host machine (minikube ip equivalent) using the kubeconfig file. Syntax is the following one: {{kubeconfig.cluster.minikube.ip}} or more generally {{kubeconfig.cluster.<cluster name>.ip}}. You can also await for some secret with this syntax {{kubernetes.<namespace>.serviceaccount.<account name>.secrets.<secret name prefix>.data.<entry name>[.<timeout in seconds, default to 2mn>]}}. This is particular useful to access freshly created service account tokens for example.\npatch\nJSON-Patch to apply on the JSON representation of the descriptor. It enables to inject configuration in descriptors for example, or changing some name/application.\nmaxBundlebeeVersion\nMinimum bundlebee version, use `*`to replace any digit in a segment. Note that snapshot is ignored in the comparison for convenience. It is an inclusive comparison.\nminBundlebeeVersion\nMinimum bundlebee version, use * to replace any digit in a segment. Note that snapshot is ignored in the comparison for convenience. It is an inclusive comparison.\nforbiddenVersions\narray of string\nList of forbidden version (due to a bug or equivalent). Here too snapshot suffix is ignored. is usable there too to replace any digit in a segment (ex: 1..). Note that 1. would NOT match 1.., version are always 3 segments.\nmanifest content can be wrapped in a bundlebee key (you wrap the whole content) which enables you to add other metadata in the manifest and still reuse BundleeBee JSON-Schema for the validation (by composition).\nIf you use JSON-Schema facilities in your preferred editor, here is the raw JSON-Schema for the manifest descriptor:\nyou can also use last version from this link.\nA manifest can reference descriptors in other alveoli, it just requires to reference them to let bundlebee find them.\nThere are mainly two ways to deploy an alveolus:\nClasspath mode: you put all your zip/jar in the classpath. This mode requires there is no conflict between descriptor names (which is the recommended practise) and it will never look for external descriptors. It is typically a recommended mode to avoid network I/O except with the Kubernetes cluster.\nFetch mode: in this mode, a missing descriptor in the classpath will look for descriptor.location and lookup the jar/zip referenced by this location (generally a maven coordinate in the form groupId:artifactId:version). It will first use your local Maven repository but can download the jar/zip if missing locally. Then the jar/zip is read and descriptors are looked up from there. This mode is nicer when depending on a lot of external alveoli but requires I/O to grab the dependencies.\nIndeed, you can bundle all your stack and hardcode your configuration or create one alveolus per environment. This is one option which works well and enable to version its configuration.\nHowever, for testing purposes, it is also neat to be able to patch descriptors on the fly. For that you can use descriptor.patches in the manifest which will transitively enable to patch the descriptors - even the ones you don’t own - using JSON-Patch and interpolations.\nHere are some examples.\nWe add to the alveolus a list of patches to apply on some descriptors\nWe reference the descriptor to patch\nWe enable interpolation from Microprofile Config (which include CLI args)\nWe define the JSON-Patch to use (optional, interpolation will also interpolate the descriptor if designed to be interpolated)\nWe use an interpolation in the configuration in the JSON-Patch replace operation which replaces the data of the referenced ConfigMap\nthis mecanism is very useful for ConfigMap descriptors but also PersistenceVolume since you can now patch `/spec/hostPath `easily too.\nIn some case it can be neat to be able to not deploy part of the stack. It is typically the case when you wrote a monitoring-full alveolus (ie with some optional services functionally). In such a case you can condition dependencies and descriptor deployment:\nused on descriptors and using a complete set of conditions for descriptors you can handle environments this way (ENV=preprod for descriptor preprod.configmap for example).\nIn some case it can be needed to evaluate some values of the manifest when executing the command. Even if not recommended it can be done using {{xxx}} placeholders - read from environment variables and system properties.\nWith this manifest you can value project.version and bundlebee.version using the command line:\nPlaceholders can use some keywords to get some particular values:\nbundlebee-strip:<value>: strips the provided value,\nbundlebee-strip-leading:<value>: strips the provided value at the beginning,\nbundlebee-strip-trailing:<value>: strips the provided value at the end,\nbundlebee-indent:<indent size>:<value>: indents a value with the provided space size, it is generally combined with another interpolation (file ones in particular) as value, ex {{bundlebee-indent:8:{{bundlebee-inline-file:myfile.txt}}}},\nbundlebee-inline-file:<file path>: load the file content as value,\nbundlebee-base64-file:<file path>: converts the file in base64 (useful to write data:xxxx,<base64> values for ex keeping the raw file in the filesystem, very helpful for images),\nbundlebee-base64::<text>: encodes in base64 the text,\nbundlebee-quote-escaped-inline-file:<file path>: load the file content as a quoted value,\nbundlebee-json-inline-file:<file path>: load the file content as a JSON string value - without quotes,\nbundlebee-json-string:content: escapes a string to be a JSON string (useful when you inject with bundlebee-json-inline-file a string in another string like in JSON ConfigMap in a JSON configuration),\nbundlebee-maven-server-username:<server id>: extract from your maven settings.xml a server username (see configuration for a custom settings.xml location),\nbundlebee-maven-server-password:<server id>: extract from your maven settings.xml a server password (potentially deciphered),\nkubeconfig.cluster.<cluster name>.ip: extract cluster IP from your kubeconfig,\ntimestamp: current time in milliseconds (since epoch),\ntimestampSec: current time in seconds (since epoch),\nnow: OffsetDateTime.now() value,\ndate:<pattern>: format OffsetDateTime.now() value using the provided pattern,\nnowUTC: OffsetDateTime.now() value with UTC ZoneId,\nkubernetes.<namespace>.serviceaccount.<account name>.secrets.<secret name prefix>.data.<entry name>[.<timeout in seconds>]: secret value looked up through Kubernetes API.\njsr223:<script path as file or resource or inline script>: executes a JSR223 script to get the result, assumes that the script engine implementation is available in the JVM (not by default). To find the engine it uses the file extension or a comment in the file (for inline script) containing bundlebee.language: <lang>. The script contains the two functions lookupByName and lookupByType which can lookup a CDI bean to reuse BundleBee utilities (ex: const bean = lookupByType.apply(getType('io.yupiik.bundlebee.core.kube.KubeClient'))). If no language is found it defaults on js.\nIf none of these placeholders match, then Microprofile Config is used to lookup the value (so system properties, environment variables and BundleBee args are used).\nfile placeholders can also read a resource from the classpath if the path does not match any existing file.\nOn windows, the usage of the Java mode is recommended and the most reliable, however, if you want to speed up a bit the execution you can run the native bundlebee executable in a docker image.\nensure to test this solution on your machine, on our test machine gain can be x2 but it depends the docker setup too.\nOnce done you would be able to replace bundlebee by docker run bundlebee -v $HOME/.kube/config:/kube/config -e KUBECONFIG=/kube/config --network host (use an alias ;)).\nHere are the step to use this solution:\nDownload bundlebee native binary, for that go on https://repo.maven.apache.org/maven2/io/yupiik/bundlebee-core/, select the version you want and download the file ending with Linux-amd64,\nCreate this Dockerfile file next to the binary you just downloaded and renamed bundlebee:\nRun docker build -t bundlebee . in the folder you put bundlebee binary and previous Dockerfile\nthis dockerfile works as of today because binaries are build on Ubuntu 20.10, you can need to adjust a bit libraries if this changes - this is why Java mode is simpler.","title":"How it works","url":"//www.yupiik.io/bundlebee/how-it-works.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Execute a HTTP request over Kubernetes client. This is mainly for not yet existing commands and to reuse all the client auto-configuration.\nName: http.\nIf true, an exception if thrown if the status is not between 200 and 299 (making the execution a failure). Default value: true\nRequest HTTP headers (in properties format). Default value:\nHTTP verb to use for the request. Default value: GET\nHTTP request path (optionally with query parameters). You can use the absolute kubernetes URL but if the value does not start with a protocol (http or https) then it will be prefixed by the Kubernetes API base. Default value: /api/\nHTTP payload to use for the request - skipped for method different from PATCH, POST and PUT. Default value: ``\nIf true, only the payload of the response will be logged if successful. Default value: true\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Http","url":"//www.yupiik.io/bundlebee/commands/http.configuration.html"},{"lang":"en","text":"","title":"Index","url":"//www.yupiik.io/bundlebee/index.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Inspect an alveolus, i.e. list the descriptors to apply.\nName: inspect.\nAlveolus name to inspect. When set to auto, it will look for all manifests found in the classpath. If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto\nIf set only this descriptor is logged, not that you can use a regex if you make the value prefixed with r/. Note it generally only makes sense with verbose option.\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto\nManifest to load to start to find the alveolus. This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip\nIf true, descriptors are logged too. Default value: false\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Inspect","url":"//www.yupiik.io/bundlebee/commands/inspect.configuration.html"},{"lang":"en","lvl2":"How it works\nGet started\nValidate the API usage\nGoing further","text":"To ensure your recipes/alveoli can be installed, you can test them. There are a lot of solutions out there from the lightest to the heaviest (using minikube locally).\nBundlebee brings an in-between solution with bundlebee-junit5 module which enables to write simple tests in plain JUnit 5.\nbundlebee-junit5 sets up a \"ok\" Kubernetes API mock (always responding HTTP 200 {}) - indeed you can control that, see later. The test are executed against this API mock ensuring all the resolution of descriptors, placeholders and patches are successfully passed.\nThis mock also enables you to inject validation in it which means you can also validate the shape or context of what is sent to kubernetes (after interpolations and enrichment).\nAfter having added the following dependency:\nYou can start writing tests with @ValidateAlveolus API (equivalent to @Test):\nJust putting the annotation on a test method will run implicitly bundlebee apply.\nHowever, it is recommended to use a setup closer to the deployment and to assert what happens at deploy time:\nHere , we injected CommandExecutor and LogCapturer. The first one enables to manually control when the command is applied and last one enables to retrieve the logs associated to the command execution (what is printed). This enables to check the command output.\nYou can go further injecting in the method parameters KubernetesApi. Similarly to log validation, it enables to validate the sent requests to Kubernetes API:\nindeed you can combine log and API validations in the same test.\nThe API is richer than just these example, for example, KubernetesApi enables you to inject your own IOPredicate<HttpExchange> which basically gives you the keys of the mock. In this mode the capture does not work anymore but you don’t really care since you see all requests going through and you can handle your validations there (ensure to fail in the test thread and not predicate which is using a HTTP server thread). It also enables you to respond more complex responses and potentially start from a different - not empty - state in your mocked kubernetes (reinstallation, deletion etc…).\nFinally, you can also check the API in the package io.yupiik.bundlebee.junit5 since @ValidateAlveolus enables, for example, to fully customize the command to execute.\nlast tip is that options of @ValidateAlveolus support to use placeholders filled from system properties in the form of {{xxx}}. This enables to inject m2 location for example if needed.","title":"JUnit 5","url":"//www.yupiik.io/bundlebee/junit5.html"},{"lang":"en","lvl2":"Configuration","text":"Creates a new project.\nName: new.\nBundle artifactId.\nWhere to create the project. If not set it will use the artifact value in current folder.\nIf true the execution runs even if dir already exists. Default value: false\nBundle groupId.\nIf true no pom.xml is generated. Default value: false\nBy default a sample alveolus with a config map is generated, if false it will be skipped. Default value: false\nBundle version. Default value: 1.0.0","title":"New","url":"//www.yupiik.io/bundlebee/commands/new.configuration.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Process all descriptors - as in an apply command - from a root descriptor. If output is set, it dumps the descriptors in this directory. Don’t forget to set --kubeconfig explicit to ignore kube setup.\nName: process.\nAlveolus name to deploy. When set to auto, it will deploy all manifests found in the classpath. If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto\nFor descriptors with await = true the max duration the test can last. Default value: 60000\nEnables to exclude descriptors from the command line. none to ignore. Value is comma separated. Note that using this setting, location is set to * so only the name is matched. Default value: none\nEnables to exclude locations (descriptor is set to *) from the command line. none to ignore. Value is comma separated. Default value: none\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto\nIf true, bundlebee.* labels will be injected into the descriptors. This is required for rollback command to work. Default value: true\nIf true, a bundlebee.timestamp label will be injected into the descritors with current date before applying the descriptor. Default value: true\nManifest to load to start to deploy (a file path or inline). This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip\nIf set, represents where to dump processed descriptors.\nIf true, each descriptor installation awaits previous ones instead of being concurrent. Enable an easier debugging for errors. Default value: false\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Process","url":"//www.yupiik.io/bundlebee/commands/process.configuration.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Rollback an alveolus deployment.\nThe strategy is the following one:\nLoad current alveolus (recursively) to list all descriptors in \"current\" version\nFind previous version if not explicit (by choosing the first previous on in the list of available version on maven repository)\nRun delete command for current version\nRun apply command for previous version\nthis command only uses releases when it guesses the versions, it does not handles SNAPSHOTs. If you want to rollback to a snapshot, ensure to configure previous* properties.\nthis is equivalent to apply and delete commands successfully. For now it is recommended to do both manually.\nName: rollback.\nAlveolus name to rollback (in currently deployed version). When set to auto, it will look up all manifests found in the classpath (it is not recommended until you perfectly know what you do). If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto\nIf an integer > 0, how long (ms) to await for the actual deletion of components - before redeploying. Default value: 120000\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto\nIf set it will be added on REST calls to force a custom grace period (in seconds). Setting it to 0 enables to delete faster objects.\nManifest to load to start to find the alveolus. This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip\nA pause (in ms) between delete and apply phases, this can some environment to release all resources related to deleted components. Default value: 0\nAlveolus name to install as rollback. Default value: auto\nSame as from but for the previous alveolus to install. Default value: auto\nSame as manifest but for the previous alveolus to install. Default value: skip\nIf true, and previous alveolus is not defined on the CLI, we will query the release repository to find available versions. If the alveolus name does not match <groupId>:<artifactId>:<version>[:<type>:<classifier>] pattern then a heuristic is used instead. Default value: true\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Rollback","url":"//www.yupiik.io/bundlebee/commands/rollback.configuration.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"Tries to run the recipe as plain forks on the host. In this mode, Bundlebee is used as the orchestrator. It is highly recommended to only do that with application matching the bundlebee command environment.\nName: run.\nAlveolus name to deploy. When set to auto, it will deploy all manifests found in the classpath. If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto\nFor descriptors with await = true the max duration the test can last. Default value: 60000\nEnables to exclude descriptors from the command line. none to ignore. Value is comma separated. Note that using this setting, location is set to * so only the name is matched. Default value: none\nEnables to exclude locations (descriptor is set to *) from the command line. none to ignore. Value is comma separated. Default value: none\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto\nManifest to load to start to deploy (a file path or inline). This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip\nIf true, each descriptor installation awaits previous ones instead of being concurrent. Enable an easier debugging for errors. Default value: false\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Run","url":"//www.yupiik.io/bundlebee/commands/run.configuration.html"},{"lang":"en","lvl2":"Custom configuration","text":"BundleBee supports a user configuration. It means you change some defaults for your local setup creating a file ~/.bundlebeerc.\nThe syntax is a standard properties one.\nHere are the supported configurations:\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto\nthis also applies for command configuration so you can also force some defaults for your most used commands this way.\nYou can also set a custom configuration file using --config-file. This enables to run a command with a custom set of configuration:","title":"User Configuration","url":"//www.yupiik.io/bundlebee/user-configuration.html"},{"lang":"en","lvl2":"Configuration","text":"Shows the application version.\nName: version.\nNo configuration.","title":"Version","url":"//www.yupiik.io/bundlebee/commands/version.configuration.html"},{"lang":"en","lvl2":"Configuration","lvl3":"Inherited Global Configuration","text":"List versions for an artifact to know which ones are available.\nName: versions.\nBundle artifactId.\nBundle groupId.\nfor these configurations, don’t hesitate to use ~/.bundlebeerc or --config-file <path to config> (just remove the -- prefix from option keys).\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema\nShould YAML/JSON be logged when it can’t be parsed. Default value: true\nWhen kubeconfig is not set the namespace to use. Default value: default\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: ``\nIf true GET http requests are not skipped when dryRun is true. Default value: false\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim\nWhen kubeconfig is set to explicit, the bearer token to use (if set).\nShould SSL connector be validated or not. Default value: true\nIf true http requests/responses to Kubernetes will be logged. Default value: false\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/\nDefault snapshot repository, not set by default.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto","title":"Versions","url":"//www.yupiik.io/bundlebee/commands/versions.configuration.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Adds a service to the alveoli available in the defined folder. It is a skaffolding command.\nTo call this goal from the command line execute: mvn bundlebee:add-alveolus.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:add-alveolus@my-execution command.\nAlveolus name. Default value: ${project.groupId}:${project.artifactId}:${project.version}. Property: ${bundlebee.add-alveolus.alveolus}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.add-alveolus.customPlaceholders}.\nJust an alias for the built-in manifest property to ease the pom configuration for all commands. Default value: skip. Property: ${bundlebee.manifest}.\nDeployment image. Default value: <unset>. Property: ${bundlebee.add-alveolus.image}.\nManifest to add the aveolus inside. Default value: ${project.build.outputDirectory}/bundlebee/manifest.json. Property: ${bundlebee.add-alveolus.manifest}.\nIf false, generated files already existing will be skipped. Default value: false. Property: ${bundlebee.add-alveolus.overwrite}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nAlveolus/template type. web will create a ConfigMap, Deployment and Service. Default value: web. Property: ${bundlebee.add-alveolus.type}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:add-alveolus","url":"//www.yupiik.io/bundlebee/maven/add-alveolus.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Apply/deploy a set of descriptors from a root one.\nTo call this goal from the command line execute: mvn bundlebee:apply.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:apply@my-execution command.\nAlveolus name to deploy. When set to auto, it will deploy all manifests found in the classpath. If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto. Property: ${bundlebee.apply.alveolus}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.apply.customPlaceholders}.\nJust an alias for the built-in manifest property to ease the pom configuration for all commands. Default value: skip. Property: ${bundlebee.manifest}.\nFor descriptors with await = true the max duration the test can last. Default value: 60000. Property: ${bundlebee.apply.descriptorAwaitTimeout}.\nEnables to exclude descriptors from the command line. none to ignore. Value is comma separated. Note that using this setting, location is set to * so only the name is matched. Default value: none. Property: ${bundlebee.apply.excludedDescriptors}.\nEnables to exclude locations (descriptor is set to *) from the command line. none to ignore. Value is comma separated. Default value: none. Property: ${bundlebee.apply.excludedLocations}.\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto. Property: ${bundlebee.apply.from}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nIf true, bundlebee.* labels will be injected into the descriptors. This is required for rollback command to work. Default value: true. Property: ${bundlebee.apply.injectBundleBeeMetadata}.\nIf true, a bundlebee.timestamp label will be injected into the descritors with current date before applying the descriptor. Default value: true. Property: ${bundlebee.apply.injectTimestamp}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nManifest to load to start to deploy (a file path or inline). This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip. Property: ${bundlebee.apply.manifest}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nIf true, each descriptor installation awaits previous ones instead of being concurrent. Enable an easier debugging for errors. Default value: false. Property: ${bundlebee.apply.useChainInsteadOfAll}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:apply","url":"//www.yupiik.io/bundlebee/maven/apply.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Build a project.\nTo call this goal from the command line execute: mvn bundlebee:build.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:build@my-execution command.\nBundle artifactId. Default value: ${project.artifactId}. Property: ${bundlebee.build.artifact}.\nProject to build. Default value: target. Property: ${bundlebee.build.builddir}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.build.customPlaceholders}.\nIf true it will be added to your local maven repository. Default value: true. Property: ${bundlebee.build.deployInLocalRepository}.\nProject to build. Default value: .. Property: ${bundlebee.build.dir}.\nBundle groupId. Default value: ${project.groupId}. Property: ${bundlebee.build.group}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.\nBundle version. Default value: ${project.version}. Property: ${bundlebee.build.version}.","title":"bundlebee:build","url":"//www.yupiik.io/bundlebee/maven/build.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Check if a new version is available. IMPORTANT: this command only works for amd64 linux machines.\nTo call this goal from the command line execute: mvn bundlebee:check-update.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:check-update@my-execution command.\nBundlebee binary artifactId. Default value: bundlebee-core. Property: ${bundlebee.check-update.artifactId}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nBundlebee binary classifier. Default value: Linux-amd64. Property: ${bundlebee.check-update.classifier}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.check-update.customPlaceholders}.\nBundlebee binary groupId. Default value: io.yupiik. Property: ${bundlebee.check-update.groupId}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhere to install bundlebee if update is true. Default value: {{user.home}}/.yupiik/bundlebee/bin/bundlebee. Property: ${bundlebee.check-update.installLocation}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nRepository bundlebee is supposed to be, generally Apache Maven central. Default value: https://repo.maven.apache.org/maven2. Property: ${bundlebee.check-update.repository}.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nBundlebee binary type (extension) in maven coordinates. Default value: bin. Property: ${bundlebee.check-update.type}.\nIf a new version is available, should it update installLocation. Default value: false. Property: ${bundlebee.check-update.update}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:check-update","url":"//www.yupiik.io/bundlebee/maven/check-update.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Cipher a password to put it in ~/.m2/settings.xml servers (useful for deploy command for example).\nTo call this goal from the command line execute: mvn bundlebee:cipher-password.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:cipher-password@my-execution command.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.cipher-password.customPlaceholders}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nPassword value to cipher (auto generates a random one). Default value: auto. Property: ${bundlebee.cipher-password.password}.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:cipher-password","url":"//www.yupiik.io/bundlebee/maven/cipher-password.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Execute bash completion. Should be setup in your ~/.bashrc or ~/.profile file to be active. The result will be the list of proposal you can inject into COMPREPLY array. To set it up you can add this snippet to your .bashrc (assumes you uses the bundlebee linux binary and it is in your $PATH otherwise replace bundlebee by your own launching script): [source,bash] ---- complete -o default -o nospace -C \"bundlebee completion\" bundlebee ----\nTo call this goal from the command line execute: mvn bundlebee:completion.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:completion@my-execution command.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.completion.customPlaceholders}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nMatches bash COMP_LINE environment variable, represents the current command line. Default value: <unset>. Property: ${comp.line}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nMatches bash COMP_POINT environment variable, represents the index of the cursor position. Default value: -1. Property: ${comp.point}.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.\nIf true logger will be used instead of stdout. Default value: false. Property: ${bundlebee.completion.useLogger}.","title":"bundlebee:completion","url":"//www.yupiik.io/bundlebee/maven/completion.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Generate a master password if none exist (in ~/.m2/settings-security.xml)\nTo call this goal from the command line execute: mvn bundlebee:create-master-password.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:create-master-password@my-execution command.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.create-master-password.customPlaceholders}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nMaster password value, if auto it will be generated. Default value: auto. Property: ${bundlebee.create-master-password.password}.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:create-master-password","url":"//www.yupiik.io/bundlebee/maven/create-master-password.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Delete an alveolus deployment by deleting all related descriptors. bundlebee.delete.propagationPolicy can be set in descriptor(s) metadata to force default CLI behavior for this descriptor.\nTo call this goal from the command line execute: mvn bundlebee:delete.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:delete@my-execution command.\nAlveolus name to rollback (in currently deployed version). When set to auto, it will look up all manifests found in the classpath (it is not recommended until you perfectly know what you do). If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto. Property: ${bundlebee.delete.alveolus}.\nIf an integer > 0, how long (ms) to await for the actual deletion of components, default does not await. Default value: <unset>. Property: ${bundlebee.delete.awaitTimeout}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.delete.customPlaceholders}.\nJust an alias for the built-in manifest property to ease the pom configuration for all commands. Default value: skip. Property: ${bundlebee.manifest}.\nFor descriptors with await = true the max duration the test can last. It is per descriptor with await true and independent of awaitTimeout. Default value: 60000. Property: ${bundlebee.delete.descriptorAwaitTimeout}.\nEnables to exclude descriptors from the command line. none to ignore. Value is comma separated. Note that using this setting, location is set to * so only the name is matched. Default value: none. Property: ${bundlebee.delete.excludedDescriptors}.\nEnables to exclude locations (descriptor is set to *) from the command line. none to ignore. Value is comma separated. Default value: none. Property: ${bundlebee.delete.excludedLocations}.\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto. Property: ${bundlebee.delete.from}.\nIf set it will be added on REST calls to force a custom grace period (in seconds). Setting it to 0 enables to delete faster objects. Default value: <unset>. Property: ${bundlebee.delete.gracePeriodSeconds}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nManifest to load to start to find the alveolus. This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip. Property: ${bundlebee.delete.manifest}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:delete","url":"//www.yupiik.io/bundlebee/maven/delete.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Build and deploy a project. It inherits from most configuration of build command and adds remote repository settings.\nTo call this goal from the command line execute: mvn bundlebee:deploy.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:deploy@my-execution command.\nBundle artifactId. Default value: ${project.artifactId}. Property: ${bundlebee.deploy.artifact}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nWhere to build (for build/temp files). Default value: target. Property: ${bundlebee.deploy.builddir}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.deploy.customPlaceholders}.\nIf true it will be added to your local maven repository too. Default value: true. Property: ${bundlebee.deploy.deployInLocalRepository}.\nProject to build. Default value: .. Property: ${bundlebee.deploy.dir}.\nIf true it enables to upload an artifact even if already present. When auto it enables it for snapshots but not for releases. Default value: auto. Property: ${bundlebee.deploy.enableReUpload}.\nBundle groupId. Default value: ${project.groupId}. Property: ${bundlebee.deploy.group}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nIf not skip it will deploy the artifact on a remote repository (nexus v2 or v3). Syntax must be a URL pointing to the REST API (base URL). If you don’t set the userinfo (username:password) in the URL it will be looked up in your settings.xml - potentially ciphered - using the hostname as serverId until you force it with --serverId. Default value: skip. Property: ${bundlebee.deploy.nexusBaseApi}.\nNexus repository. It is the repository name the artifact(s) will be uploaded to. If auto, it will be maven-releases if the version is a release one and maven-snapshots otherwise. Default value: auto. Property: ${bundlebee.deploy.nexusRepository}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nServerId to lookup from your maven settings.xml for remote deployment if enabled (nexus authentication). Default value: <unset>. Property: ${bundlebee.deploy.serverId}.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.\nBundle version. Default value: ${project.version}. Property: ${bundlebee.deploy.version}.","title":"bundlebee:deploy","url":"//www.yupiik.io/bundlebee/maven/deploy.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Execute a HTTP request over Kubernetes client. This is mainly for not yet existing commands and to reuse all the client auto-configuration.\nTo call this goal from the command line execute: mvn bundlebee:http.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:http@my-execution command.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.http.customPlaceholders}.\nIf true, an exception if thrown if the status is not between 200 and 299 (making the execution a failure). Default value: true. Property: ${bundlebee.http.failOnError}.\nRequest HTTP headers (in properties format). Default value: Accept: application/jsonnContent-Type: application/json. Property: ${bundlebee.http.headers}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nHTTP verb to use for the request. Default value: GET. Property: ${bundlebee.http.method}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nHTTP request path (optionally with query parameters). You can use the absolute kubernetes URL but if the value does not start with a protocol (http or https) then it will be prefixed by the Kubernetes API base. Default value: /api/. Property: ${bundlebee.http.path}.\nHTTP payload to use for the request - skipped for method different from PATCH, POST and PUT. Default value: `. Property: `${bundlebee.http.payload}.\nIf true, only the payload of the response will be logged if successful. Default value: true. Property: ${bundlebee.http.payloadOnly}.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:http","url":"//www.yupiik.io/bundlebee/maven/http.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Inspect an alveolus, i.e. list the descriptors to apply.\nTo call this goal from the command line execute: mvn bundlebee:inspect.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:inspect@my-execution command.\nAlveolus name to inspect. When set to auto, it will look for all manifests found in the classpath. If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto. Property: ${bundlebee.inspect.alveolus}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.inspect.customPlaceholders}.\nJust an alias for the built-in manifest property to ease the pom configuration for all commands. Default value: skip. Property: ${bundlebee.manifest}.\nIf set only this descriptor is logged, not that you can use a regex if you make the value prefixed with r/. Note it generally only makes sense with verbose option. Default value: <unset>. Property: ${bundlebee.inspect.descriptor}.\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto. Property: ${bundlebee.inspect.from}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nManifest to load to start to find the alveolus. This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip. Property: ${bundlebee.inspect.manifest}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.\nIf true, descriptors are logged too. Default value: false. Property: ${bundlebee.inspect.verbose}.","title":"bundlebee:inspect","url":"//www.yupiik.io/bundlebee/maven/inspect.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Creates a new project.\nTo call this goal from the command line execute: mvn bundlebee:new.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:new@my-execution command.\nBundle artifactId. Default value: ${project.artifactId}. Property: ${bundlebee.new.artifact}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.new.customPlaceholders}.\nWhere to create the project. If not set it will use the artifact value in current folder. Default value: ${project.build.outputDirectory}. Property: ${bundlebee.new.dir}.\nIf true the execution runs even if dir already exists. Default value: true. Property: ${bundlebee.new.force}.\nBundle groupId. Default value: ${project.groupId}. Property: ${bundlebee.new.group}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nIf true no pom.xml is generated. Default value: true. Property: ${bundlebee.new.skipPom}.\nBy default a sample alveolus with a config map is generated, if false it will be skipped. Default value: true. Property: ${bundlebee.new.skipSamples}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.\nBundle version. Default value: ${project.version}. Property: ${bundlebee.new.version}.","title":"bundlebee:new","url":"//www.yupiik.io/bundlebee/maven/new.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Process all descriptors - as in an apply command - from a root descriptor. If output is set, it dumps the descriptors in this directory. Don’t forget to set --kubeconfig explicit to ignore kube setup.\nTo call this goal from the command line execute: mvn bundlebee:process.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:process@my-execution command.\nAlveolus name to deploy. When set to auto, it will deploy all manifests found in the classpath. If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto. Property: ${bundlebee.process.alveolus}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.process.customPlaceholders}.\nJust an alias for the built-in manifest property to ease the pom configuration for all commands. Default value: skip. Property: ${bundlebee.manifest}.\nFor descriptors with await = true the max duration the test can last. Default value: 60000. Property: ${bundlebee.process.descriptorAwaitTimeout}.\nEnables to exclude descriptors from the command line. none to ignore. Value is comma separated. Note that using this setting, location is set to * so only the name is matched. Default value: none. Property: ${bundlebee.process.excludedDescriptors}.\nEnables to exclude locations (descriptor is set to *) from the command line. none to ignore. Value is comma separated. Default value: none. Property: ${bundlebee.process.excludedLocations}.\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto. Property: ${bundlebee.process.from}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nIf true, bundlebee.* labels will be injected into the descriptors. This is required for rollback command to work. Default value: true. Property: ${bundlebee.process.injectBundleBeeMetadata}.\nIf true, a bundlebee.timestamp label will be injected into the descritors with current date before applying the descriptor. Default value: true. Property: ${bundlebee.process.injectTimestamp}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nManifest to load to start to deploy (a file path or inline). This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip. Property: ${bundlebee.process.manifest}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nIf set, represents where to dump processed descriptors. Default value: <unset>. Property: ${bundlebee.process.output}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nIf true, each descriptor installation awaits previous ones instead of being concurrent. Enable an easier debugging for errors. Default value: false. Property: ${bundlebee.process.useChainInsteadOfAll}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:process","url":"//www.yupiik.io/bundlebee/maven/process.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Rollback an alveolus deployment. The strategy is the following one: * Load current alveolus (recursively) to list all descriptors in \"current\" version * Find previous version if not explicit (by choosing the first previous on in the list of available version on maven repository) * Run delete command for current version * Run apply command for previous version IMPORTANT: this command only uses releases when it guesses the versions, it does not handles SNAPSHOTs. If you want to rollback to a snapshot, ensure to configure previous* properties. TIP: this is equivalent to apply and delete commands successfully. For now it is recommended to do both manually.\nTo call this goal from the command line execute: mvn bundlebee:rollback.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:rollback@my-execution command.\nAlveolus name to rollback (in currently deployed version). When set to auto, it will look up all manifests found in the classpath (it is not recommended until you perfectly know what you do). If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto. Property: ${bundlebee.rollback.alveolus}.\nIf an integer > 0, how long (ms) to await for the actual deletion of components - before redeploying. Default value: 120000. Property: ${bundlebee.rollback.awaitTimeout}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.rollback.customPlaceholders}.\nJust an alias for the built-in manifest property to ease the pom configuration for all commands. Default value: skip. Property: ${bundlebee.manifest}.\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto. Property: ${bundlebee.rollback.from}.\nIf set it will be added on REST calls to force a custom grace period (in seconds). Setting it to 0 enables to delete faster objects. Default value: <unset>. Property: ${bundlebee.rollback.gracePeriodSeconds}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nManifest to load to start to find the alveolus. This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip. Property: ${bundlebee.rollback.manifest}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nA pause (in ms) between delete and apply phases, this can some environment to release all resources related to deleted components. Default value: 0. Property: ${bundlebee.rollback.pause}.\nAlveolus name to install as rollback. Default value: auto. Property: ${bundlebee.rollback.previousAlveolus}.\nSame as from but for the previous alveolus to install. Default value: auto. Property: ${bundlebee.rollback.previousFrom}.\nSame as manifest but for the previous alveolus to install. Default value: skip. Property: ${bundlebee.rollback.previousManifest}.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.\nIf true, and previous alveolus is not defined on the CLI, we will query the release repository to find available versions. If the alveolus name does not match <groupId>:<artifactId>:<version>[:<type>:<classifier>] pattern then a heuristic is used instead. Default value: true. Property: ${bundlebee.rollback.useMavenVersioning}.","title":"bundlebee:rollback","url":"//www.yupiik.io/bundlebee/maven/rollback.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Tries to run the recipe as plain forks on the host. In this mode, Bundlebee is used as the orchestrator. It is highly recommended to only do that with application matching the bundlebee command environment.\nTo call this goal from the command line execute: mvn bundlebee:run.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:run@my-execution command.\nAlveolus name to deploy. When set to auto, it will deploy all manifests found in the classpath. If you set manifest option, alveolus is set to auto and there is a single alveolus in it, this will default to it instead of using classpath deployment. Default value: auto. Property: ${bundlebee.run.alveolus}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.run.customPlaceholders}.\nJust an alias for the built-in manifest property to ease the pom configuration for all commands. Default value: skip. Property: ${bundlebee.manifest}.\nFor descriptors with await = true the max duration the test can last. Default value: 60000. Property: ${bundlebee.run.descriptorAwaitTimeout}.\nEnables to exclude descriptors from the command line. none to ignore. Value is comma separated. Note that using this setting, location is set to * so only the name is matched. Default value: none. Property: ${bundlebee.run.excludedDescriptors}.\nEnables to exclude locations (descriptor is set to *) from the command line. none to ignore. Value is comma separated. Default value: none. Property: ${bundlebee.run.excludedLocations}.\nRoot dependency to download to get the manifest. If set to auto it is assumed to be present in current classpath. Default value: auto. Property: ${bundlebee.run.from}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nManifest to load to start to deploy (a file path or inline). This optional setting mainly enables to use dependencies easily. Ignored if set to skip. Default value: skip. Property: ${bundlebee.run.manifest}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nIf true, each descriptor installation awaits previous ones instead of being concurrent. Enable an easier debugging for errors. Default value: false. Property: ${bundlebee.run.useChainInsteadOfAll}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:run","url":"//www.yupiik.io/bundlebee/maven/run.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"Shows the application version.\nTo call this goal from the command line execute: mvn bundlebee:version.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:version@my-execution command.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.version.customPlaceholders}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:version","url":"//www.yupiik.io/bundlebee/maven/version.html"},{"lang":"en","lvl2":"Coordinates\nConfiguration","text":"List versions for an artifact to know which ones are available.\nTo call this goal from the command line execute: mvn bundlebee:versions.\nTo bind this goal in the build you can use:\nYou can execute this goal particularly with mvn bundlebee:versions@my-execution command.\nBundle artifactId. Default value: ${project.artifactId}. Property: ${bundlebee.versions.artifact}.\nHow often to retry for a descriptor condition. Increasing it will reduce the pressure on the Kubernetes REST API (rate limiting for example). Default value: 500. Property: ${bundlebee.awaiter.retryInterval}.\nCustom properties injected in the main, it is often used for placeholders. If the key (tag in pom) starts with bundlebee-placeholder-import then the value is resolved as a properties file which is injected in the resulting placeholders (indirect placeholders). Property: ${bundlebee.versions.customPlaceholders}.\nBundle groupId. Default value: ${project.groupId}. Property: ${bundlebee.versions.group}.\nHow many threads are allocated to async HTTP client, negative or zero value means to use common pool. Default value: -1. Property: ${bundlebee.httpclient.threads}.\nWhen kubeconfig is not set the base API endpoint. Default value: http://localhost:8080. Property: ${bundlebee.kube.api}.\nWhen kubeconfig (explicit or not) is used, the context to use. If not set it is taken from the kubeconfig itself. Default value: <unset>. Property: ${bundlebee.kube.context}.\nWhen using custom metadata (bundlebee ones or timestamp to force a rollout), where to inject them. Default uses labels since it enables to query them later on but you can switch it to annotations. Default value: labels. Property: ${bundlebee.kube.customMetadataInjectionPoint}.\nDefault value for deletions of propagationPolicy. Values can be Orphan, Foreground and Background. Default value: Foreground. Property: ${bundlebee.kube.defaultPropagationPolicy}.\nIf true http requests/responses are skipped. Note that dry run implies verbose=true for the http client. Note that as of today, all responses are mocked by a HTTP 200 and an empty JSON payload. Default value: false. Property: ${bundlebee.kube.dryRun}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: replicas,template,updateStrategy,persistentVolumeClaimRetentionPolicy,minReadySeconds,serviceName,selector. Property: ${bundlebee.kube.filters.statefuleset.spec.allowed}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself and for cases it is not enough, you can set force to true to delete the descriptor before applying it again (move from clusterip to nodeport or the opposite in a serice for ex). Note that you can set it to true in a descriptor annotation io.yupiik.bundlebee/force too to not be global. Default value: false. Property: ${bundlebee.kube.force}.\nEnables to tolerate custom attributes in the descriptors. Typically used to drop /$schema attribute which enables a nice completion in editors. Values are | delimited and are either a JSON-Pointer (wrapped in a remove JSON-Patch) or directly a JSON-Patch. Default value: /$schema. Property: ${bundlebee.kube.implicitlyDroppedAttributes}.\nShould YAML/JSON be logged when it can’t be parsed. Default value: true. Property: ${bundlebee.kube.logDescriptorOnParsingError}.\nWhen kubeconfig is not set the namespace to use. Default value: default. Property: ${bundlebee.kube.namespace}.\nBy default a descriptor update is done using PATCH with strategic merge patch logic, if set to true it will use a plain PUT. Note that io.yupiik.bundlebee/putOnUpdate annotations can be set to true to force that in the descriptor itself. Default value: false. Property: ${bundlebee.kube.putOnUpdate}.\nEnables to define resource mapping, syntax uses propeties one: <lowercased resource kind>s = /apis/….. Default value: `. Property: `${bundlebee.kube.resourceMapping}.\nIf true GET http requests are not skipped when dryRun is true. Default value: false. Property: ${bundlebee.kube.skipDryRunForGet}.\nList of kind of descriptors updates can be skipped, it is often useful for PersistentVolumeClaim. Default value: PersistentVolumeClaim. Property: ${bundlebee.kube.skipUpdateForKinds}.\nWhen kubeconfig is set to explicit, the bearer token to use (if set). Default value: <unset>. Property: ${bundlebee.kube.token}.\nShould SSL connector be validated or not. Default value: true. Property: ${bundlebee.kube.validateSSL}.\nIf true http requests/responses to Kubernetes will be logged. Default value: false. Property: ${bundlebee.kube.verbose}.\nKubeconfig location. If set to auto it will try to guess from your $HOME/.kube/config file until you set it so explicit where it will use other bundlebee.kube properties to create the client. The content can also be set inline!. Default value: auto. Property: ${kubeconfig}.\nWhere to cache maven dependencies. If set to auto, $HOME/.m2/repository is used. Default value: auto. Property: ${bundlebee.maven.cache}.\nIf true we only use cache value and never fallback on default maven settings.xml location. Default value: false. Property: ${bundlebee.maven.forceCustomSettingsXml}.\nWhen fetching a dependency using HTTP, the connection timeout for this dependency. Default value: 30000. Property: ${bundlebee.maven.http.connectTimeout}.\nIf false we first try to read settings.xml file(s) in cache location before the default one. Default value: true. Property: ${bundlebee.maven.preferCustomSettingsXml}.\nEnable the download, i.e. ensure it runs only with local maven repository. Default value: false. Property: ${bundlebee.maven.repositories.downloads.enabled}.\nProperties to define the headers to set per repository, syntax is host1=headerName headerValue and it supports as much lines as used repositories. Note that you can use maven ~/.m2/settings.xml servers (potentially ciphered) username/password pairs. In this last case the server id must be bundlebee.<server host>. Still in settings.xml case, if the username is null the password value is used as raw Authorization header else username/password is encoded as a basic header. Default value: <unset>. Property: ${bundlebee.maven.repositories.httpHeaders}.\nDefault release repository. Default value: https://repo.maven.apache.org/maven2/. Property: ${bundlebee.maven.repositories.release}.\nDefault snapshot repository, not set by default. Default value: <unset>. Property: ${bundlebee.maven.repositories.snapshot}.\nCurrent module packaging. Default value: ${project.packaging}. Property: ``.\nSkip execution. Default value: false. Property: ${bundlebee.skip}.\nIf true, bundlebee lookup in maven context will be one level only which means foo will be looked up as such in maven and not `${foo} which will work. Default value: false. Property: ${bundlebee.skipMavenForcedFilteringForPlaceholders}.\nSkipped packaging types. Default value: pom. Property: ${bundlebee.skipPackaging}.\nShould JUL logging redirected to Maven logging (enable it only if you set up maven to use JUL). Default value: false. Property: ${bundlebee.useDefaultLogging}.","title":"bundlebee:versions","url":"//www.yupiik.io/bundlebee/maven/versions.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nConfiguration","text":"Setup \"elasticsearch-local\" which runs an Elasticsearch instance usable by other applications.\nThe Elasticsearch cluster name. Default value: elasticsearch-local.\nThe discovery to use, default is for a single node so if you patch the descriptors to make it a cluster, ensure to tune it. Default value: single-node.\nThe elasticsearch image to use. Default value: elasticsearch:7.10.1.\nThe ES_JAVA_OPTS value. Default value: -Dbundlebee=true.\nWhere to store Elasticsearch data on the host. Default value: /data/elasticsearch-local.","title":"io.yupiik.alveoli:elasticsearch-local:1.0.0","url":"//www.yupiik.io/bundlebee/alveoli/elasticsearch-local-io-yupiik-alveoli-elasticsearch-local-1-0-0.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nConfiguration","text":"Setup \"elasticsearch-local\" which runs an Elasticsearch instance usable by other applications.\nThe Elasticsearch cluster name. Default value: elasticsearch-local.\nThe discovery to use, default is for a single node so if you patch the descriptors to make it a cluster, ensure to tune it. Default value: single-node.\nThe elasticsearch image to use. Default value: elasticsearch:7.10.1.\nThe ES_JAVA_OPTS value. Default value: -Dbundlebee=true.\nWhere to store Elasticsearch data on the host. Default value: /data/elasticsearch-local.","title":"io.yupiik.alveoli:elasticsearch-local:1.0.0-SNAPSHOT","url":"//www.yupiik.io/bundlebee/alveoli/elasticsearch-local-io-yupiik-alveoli-elasticsearch-local-1-0-0-SNAPSHOT.html"},{"lang":"en","lvl2":"Maven Dependency\nDefault Configuration\nPorts\nSample Usage\nConfiguration","text":"Setup \"elasticsearch-local\" which runs an Elasticsearch instance usable by other applications.\n{{elasticsearch-local.discoveryType:-single-node}}\n{{elasticsearch-local.clusterName:-elasticsearch-local}}\n{{elasticsearch-local.javaOpts:--Dbundlebee=true}}\nName: elasticsearch\nPort: 9200\nTarget Port: 9200\nThe Elasticsearch cluster name. Default value: elasticsearch-local.\nThe discovery to use, default is for a single node so if you patch the descriptors to make it a cluster, ensure to tune it. Default value: single-node.\nThe elasticsearch image to use. Default value: elasticsearch:7.10.1.\nThe ES_JAVA_OPTS value. Default value: -Dbundlebee=true.\nWhere to store Elasticsearch data on the host. Default value: /data/elasticsearch-local.","title":"io.yupiik.alveoli:elasticsearch-local:1.0.16","url":"//www.yupiik.io/bundlebee/alveoli/elasticsearch-local-io-yupiik-alveoli-elasticsearch-local.html"},{"lang":"en","lvl2":"Maven Dependency\nDefault Configuration\nPorts\nSample Usage\nConfiguration","text":"Simple Grafana instance, note we preconfigure it with Loki, Prometheus and Zipkin alveoli, ensure to override the configuration if you don’t use them.\nName: grafana\nProtocol: TCP\nPort: 3000\nTarget Port: 3000\nNode Port: 30300\non linux and with minikube you can access this service using http://$(minikube ip):30300 on your host.\nThe image to use. Default value: grafana/grafana:9.0.6.","title":"io.yupiik.alveoli:grafana-simple:1.0.16","url":"//www.yupiik.io/bundlebee/alveoli/grafana-simple-io-yupiik-alveoli-grafana-simple.html"},{"lang":"en","lvl2":"Maven Dependency\nDefault Configuration\nPorts\nSample Usage\nConfiguration","text":"Loki setup to aggregate service logs using promtail, the prometheus for logs.\nName: loki (loki)\nProtocol: TCP\nPort: 3100\nTarget Port: 3100\nNode Port: 32100\non linux and with minikube you can access this service using http://$(minikube ip):32100 on your host.\nName: promtail (promtail-http)\nPort: 3101\nTarget Port: 3101\nNode Port: 32101\non linux and with minikube you can access this service using http://$(minikube ip):32101 on your host.\nThe image to use for loki. Default value: grafana/loki:2.6.1.\nPipeline stage to use, generally cri or docker. Default value: cri.\nThe image to use for promtail. Default value: grafana/promtail:2.6.1.","title":"io.yupiik.alveoli:loki-simple:1.0.16","url":"//www.yupiik.io/bundlebee/alveoli/loki-simple-io-yupiik-alveoli-loki-simple.html"},{"lang":"en","lvl2":"Maven Dependency\nDefault Configuration\nPorts\nSample Usage\nConfiguration","text":"Setup \"minio-local\" which runs a MinIO instance usable by other applications.\n{{minio-local.rootUser:-s3user}}\n{{minio-local.rootPassword:-s3password}}\n{{minio-local.regionName:-us-east-1}}\nName: minio (minio-api)\nPort: 9000\nTarget Port: 9000\nNode Port: {}\nName: minio (minio-console)\nPort: 9100\nTarget Port: 9100\non linux and with minikube you can access this service using http://$(minikube ip):{} on your host.\nThe published port of the api outside of the cluster. Default value: 30090.\nThe published port of the console outside of the cluster. Default value: 30091.\nThe minio image to use. Default value: minio/minio:latest.\nThe S3 region name. Default value: us-east-1.\nThe root password. Default value: s3password.\nThe root user. Default value: s3user.","title":"io.yupiik.alveoli:minio-local:1.0.16","url":"//www.yupiik.io/bundlebee/alveoli/minio-local-io-yupiik-alveoli-minio-local.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nDependencies","text":"Includes loki+prometheus+zipkin+grafana at once.\nio.yupiik.alveoli:prometheus-simple:1.0.16 from io.yupiik.alveoli:prometheus-simple:1.0.16 dependency\nio.yupiik.alveoli:zipkin-simple:1.0.16 from io.yupiik.alveoli:zipkin-simple:1.0.16 dependency\nio.yupiik.alveoli:loki-simple:1.0.16 from io.yupiik.alveoli:loki-simple:1.0.16 dependency\nio.yupiik.alveoli:grafana-simple:1.0.16 from io.yupiik.alveoli:grafana-simple:1.0.16 dependency","title":"io.yupiik.alveoli:monitoring-alveolus:1.0.16","url":"//www.yupiik.io/bundlebee/alveoli/monitoring-alveolus-io-yupiik-alveoli-monitoring-alveolus.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nConfiguration","text":"Setup \"postgres-local\" which runs a PostgreSQL instance usable by other applications.\nThe default database name in the PostgreSQL instance. Default value: postgres.\nWhere to persist data - using a hostPath mounting point by default. Default value: /data/postgres-local.\nThe default user PostgreSQL password. Default value: postgres.\nThe default user PostgreSQL username. Default value: postgres.","title":"io.yupiik.alveoli:postgres-local:1.0.0","url":"//www.yupiik.io/bundlebee/alveoli/postgres-local-io-yupiik-alveoli-postgres-local-1-0-0.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nConfiguration","text":"Setup \"postgres-local\" which runs a PostgreSQL instance usable by other applications.\nThe default database name in the PostgreSQL instance. Default value: postgres.\nWhere to persist data - using a hostPath mounting point by default. Default value: /data/postgres-local.\nThe default user PostgreSQL password. Default value: postgres.\nThe default user PostgreSQL username. Default value: postgres.","title":"io.yupiik.alveoli:postgres-local:1.0.0-SNAPSHOT","url":"//www.yupiik.io/bundlebee/alveoli/postgres-local-io-yupiik-alveoli-postgres-local-1-0-0-SNAPSHOT.html"},{"lang":"en","lvl2":"Maven Dependency\nDefault Configuration\nPorts\nSample Usage\nConfiguration","text":"Setup \"postgres-local\" which runs a PostgreSQL instance usable by other applications.\n{{postgres-local.db:-postgres}}\n{{postgres-local.username:-postgres}}\n{{postgres-local.password:-postgres}}\n/var/lib/postgresql/data/pgdata\nName: postgres\nPort: 5432\nTarget Port: 5432\nThe default database name in the PostgreSQL instance. Default value: postgres.\nWhere to persist data - using a hostPath mounting point by default. Default value: /data/postgres-local.\nThe default user PostgreSQL password. Default value: postgres.\nThe default user PostgreSQL username. Default value: postgres.","title":"io.yupiik.alveoli:postgres-local:1.0.16","url":"//www.yupiik.io/bundlebee/alveoli/postgres-local-io-yupiik-alveoli-postgres-local.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nConfiguration","text":"Prometheus local/dev setup. Will be available on http://$(PROMETHEUS_SERVICE_SERVICE_HOST):$(PROMETHEUS_SERVICE_SERVICE_PORT).\nThe image to use. Default value: quay.io/prometheus/prometheus:v1.0.1.","title":"io.yupiik.alveoli:prometheus-simple:1.0.0","url":"//www.yupiik.io/bundlebee/alveoli/prometheus-simple-io-yupiik-alveoli-prometheus-simple-1-0-0.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nConfiguration","text":"Prometheus local/dev setup. Will be available on http://$(PROMETHEUS_SERVICE_SERVICE_HOST):$(PROMETHEUS_SERVICE_SERVICE_PORT).\nThe image to use. Default value: quay.io/prometheus/prometheus:v1.0.1.","title":"io.yupiik.alveoli:prometheus-simple:1.0.0-SNAPSHOT","url":"//www.yupiik.io/bundlebee/alveoli/prometheus-simple-io-yupiik-alveoli-prometheus-simple-1-0-0-SNAPSHOT.html"},{"lang":"en","lvl2":"Maven Dependency\nDefault Configuration\nPorts\nSample Usage\nConfiguration","text":"Prometheus local/dev setup. Will be available on http://$(PROMETHEUS_SERVICE_SERVICE_HOST):$(PROMETHEUS_SERVICE_SERVICE_PORT).\nName: prometheus\nProtocol: TCP\nPort: 9090\nTarget Port: 9090\nNode Port: 32090\non linux and with minikube you can access this service using http://$(minikube ip):32090 on your host.\nThe image to use. Default value: prom/prometheus:v2.37.0.","title":"io.yupiik.alveoli:prometheus-simple:1.0.16","url":"//www.yupiik.io/bundlebee/alveoli/prometheus-simple-io-yupiik-alveoli-prometheus-simple.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nConfiguration","text":"Zipkin in memory setup. Will be available on http://$(ZIPKIN_SERVICE_SERVICE_HOST):$(ZIPKIN_SERVICE_SERVICE_PORT). For example http://$(ZIPKIN_SERVICE_SERVICE_HOST):$(ZIPKIN_SERVICE_SERVICE_PORT)/api/v2/spans to push spans through HTTP.\nThe image to use. Default value: openzipkin/zipkin:2.23.\nThe storage type, by default it uses mem storage (in memory). Default value: mem.","title":"io.yupiik.alveoli:zipkin-simple:1.0.0","url":"//www.yupiik.io/bundlebee/alveoli/zipkin-simple-io-yupiik-alveoli-zipkin-simple-1-0-0.html"},{"lang":"en","lvl2":"Maven Dependency\nSample Usage\nConfiguration","text":"Zipkin in memory setup. Will be available on http://$(ZIPKIN_SERVICE_SERVICE_HOST):$(ZIPKIN_SERVICE_SERVICE_PORT). For example http://$(ZIPKIN_SERVICE_SERVICE_HOST):$(ZIPKIN_SERVICE_SERVICE_PORT)/api/v2/spans to push spans through HTTP.\nThe image to use. Default value: openzipkin/zipkin:2.23.\nThe storage type, by default it uses mem storage (in memory). Default value: mem.","title":"io.yupiik.alveoli:zipkin-simple:1.0.0-SNAPSHOT","url":"//www.yupiik.io/bundlebee/alveoli/zipkin-simple-io-yupiik-alveoli-zipkin-simple-1-0-0-SNAPSHOT.html"},{"lang":"en","lvl2":"Maven Dependency\nDefault Configuration\nPorts\nSample Usage\nConfiguration","text":"Zipkin in memory setup. Will be available on http://$(ZIPKIN_SERVICE_SERVICE_HOST):$(ZIPKIN_SERVICE_SERVICE_PORT). For example http://$(ZIPKIN_SERVICE_SERVICE_HOST):$(ZIPKIN_SERVICE_SERVICE_PORT)/api/v2/spans to push spans through HTTP.\n{{zipkin-simple.storageType:-mem}}\nName: zipkin\nProtocol: TCP\nPort: 9411\nTarget Port: 9411\nNode Port: 31411\non linux and with minikube you can access this service using http://$(minikube ip):31411 on your host.\nThe image to use. Default value: openzipkin/zipkin:2.23.\nThe storage type, by default it uses mem storage (in memory). Default value: mem.","title":"io.yupiik.alveoli:zipkin-simple:1.0.16","url":"//www.yupiik.io/bundlebee/alveoli/zipkin-simple-io-yupiik-alveoli-zipkin-simple.html"}]