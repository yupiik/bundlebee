{
  "description":"CustomResourceDefinitionList is a list of CustomResourceDefinition objects.",
  "properties":{
    "apiVersion":{
      "description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type":"string"
    },
    "items":{
      "description":"items list individual CustomResourceDefinition objects",
      "items":{
        "description":"CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.",
        "properties":{
          "apiVersion":{
            "description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type":"string"
          },
          "kind":{
            "description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type":"string"
          },
          "metadata":{
            "description":"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "properties":{
              "annotations":{
                "additionalProperties":{
                  "type":"string"
                },
                "description":"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type":"object"
              },
              "clusterName":{
                "description":"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type":"string"
              },
              "creationTimestamp":{
                "description":"CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                "format":"date-time",
                "type":"string"
              },
              "deletionGracePeriodSeconds":{
                "description":"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "format":"int64",
                "type":"integer"
              },
              "deletionTimestamp":{
                "description":"DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                "format":"date-time",
                "type":"string"
              },
              "finalizers":{
                "description":"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "items":{
                  "type":"string"
                },
                "type":"array"
              },
              "generateName":{
                "description":"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type":"string"
              },
              "generation":{
                "description":"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "format":"int64",
                "type":"integer"
              },
              "labels":{
                "additionalProperties":{
                  "type":"string"
                },
                "description":"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type":"object"
              },
              "managedFields":{
                "description":"ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "items":{
                  "description":"ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "properties":{
                    "apiVersion":{
                      "description":"APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type":"string"
                    },
                    "fieldsType":{
                      "description":"FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type":"string"
                    },
                    "fieldsV1":{
                      "description":"FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
                      "type":"object"
                    },
                    "manager":{
                      "description":"Manager is an identifier of the workflow managing these fields.",
                      "type":"string"
                    },
                    "operation":{
                      "description":"Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type":"string"
                    },
                    "time":{
                      "description":"Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'",
                      "format":"date-time",
                      "type":"string"
                    }
                  },
                  "type":"object"
                },
                "type":"array"
              },
              "name":{
                "description":"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type":"string"
              },
              "namespace":{
                "description":"Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type":"string"
              },
              "ownerReferences":{
                "description":"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "items":{
                  "description":"OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "properties":{
                    "apiVersion":{
                      "description":"API version of the referent.",
                      "type":"string"
                    },
                    "blockOwnerDeletion":{
                      "description":"If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type":"boolean"
                    },
                    "controller":{
                      "description":"If true, this reference points to the managing controller.",
                      "type":"boolean"
                    },
                    "kind":{
                      "description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type":"string"
                    },
                    "name":{
                      "description":"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type":"string"
                    },
                    "uid":{
                      "description":"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type":"string"
                    }
                  },
                  "required":[
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "type":"object"
                },
                "type":"array"
              },
              "resourceVersion":{
                "description":"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type":"string"
              },
              "selfLink":{
                "description":"SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
                "type":"string"
              },
              "uid":{
                "description":"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type":"string"
              }
            },
            "type":"object"
          },
          "spec":{
            "description":"spec describes how the user wants the resources to appear",
            "properties":{
              "additionalPrinterColumns":{
                "description":"additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.",
                "items":{
                  "description":"CustomResourceColumnDefinition specifies a column for server side printing.",
                  "properties":{
                    "JSONPath":{
                      "description":"JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.",
                      "type":"string"
                    },
                    "description":{
                      "description":"description is a human readable description of this column.",
                      "type":"string"
                    },
                    "format":{
                      "description":"format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
                      "type":"string"
                    },
                    "name":{
                      "description":"name is a human readable name for the column.",
                      "type":"string"
                    },
                    "priority":{
                      "description":"priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.",
                      "format":"int32",
                      "type":"integer"
                    },
                    "type":{
                      "description":"type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
                      "type":"string"
                    }
                  },
                  "required":[
                    "name",
                    "type",
                    "JSONPath"
                  ],
                  "type":"object"
                },
                "type":"array"
              },
              "conversion":{
                "description":"conversion defines conversion settings for the CRD.",
                "properties":{
                  "conversionReviewVersions":{
                    "description":"conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `[\"v1beta1\"]`.",
                    "items":{
                      "type":"string"
                    },
                    "type":"array"
                  },
                  "strategy":{
                    "description":"strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information\n  is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.",
                    "type":"string"
                  },
                  "webhookClientConfig":{
                    "description":"webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.",
                    "properties":{
                      "caBundle":{
                        "description":"caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
                        "format":"byte",
                        "type":"string"
                      },
                      "service":{
                        "description":"service is a reference to the service for this webhook. Either service or url must be specified.\n\nIf the webhook is running within the cluster, then you should use `service`.",
                        "properties":{
                          "name":{
                            "description":"name is the name of the service. Required",
                            "type":"string"
                          },
                          "namespace":{
                            "description":"namespace is the namespace of the service. Required",
                            "type":"string"
                          },
                          "path":{
                            "description":"path is an optional URL path at which the webhook will be contacted.",
                            "type":"string"
                          },
                          "port":{
                            "description":"port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.",
                            "format":"int32",
                            "type":"integer"
                          }
                        },
                        "required":[
                          "namespace",
                          "name"
                        ],
                        "type":"object"
                      },
                      "url":{
                        "description":"url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
                        "type":"string"
                      }
                    },
                    "type":"object"
                  }
                },
                "required":[
                  "strategy"
                ],
                "type":"object"
              },
              "group":{
                "description":"group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).",
                "type":"string"
              },
              "names":{
                "description":"names specify the resource and kind names for the custom resource.",
                "properties":{
                  "categories":{
                    "description":"categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.",
                    "items":{
                      "type":"string"
                    },
                    "type":"array"
                  },
                  "kind":{
                    "description":"kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.",
                    "type":"string"
                  },
                  "listKind":{
                    "description":"listKind is the serialized kind of the list for this resource. Defaults to \"`kind`List\".",
                    "type":"string"
                  },
                  "plural":{
                    "description":"plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.",
                    "type":"string"
                  },
                  "shortNames":{
                    "description":"shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.",
                    "items":{
                      "type":"string"
                    },
                    "type":"array"
                  },
                  "singular":{
                    "description":"singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.",
                    "type":"string"
                  }
                },
                "required":[
                  "plural",
                  "kind"
                ],
                "type":"object"
              },
              "preserveUnknownFields":{
                "description":"preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.",
                "type":"boolean"
              },
              "scope":{
                "description":"scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.",
                "type":"string"
              },
              "subresources":{
                "description":"subresources specify what subresources the defined custom resource has. If present, this field configures subresources for all versions. Top-level and per-version subresources are mutually exclusive.",
                "properties":{
                  "scale":{
                    "description":"scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.",
                    "properties":{
                      "labelSelectorPath":{
                        "description":"labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.",
                        "type":"string"
                      },
                      "specReplicasPath":{
                        "description":"specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.",
                        "type":"string"
                      },
                      "statusReplicasPath":{
                        "description":"statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.",
                        "type":"string"
                      }
                    },
                    "required":[
                      "specReplicasPath",
                      "statusReplicasPath"
                    ],
                    "type":"object"
                  },
                  "status":{
                    "description":"status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.",
                    "type":"object"
                  }
                },
                "type":"object"
              },
              "validation":{
                "description":"validation describes the schema used for validation and pruning of the custom resource. If present, this validation schema is used to validate all versions. Top-level and per-version schemas are mutually exclusive.",
                "properties":{
                  "openAPIV3Schema":{
                    "type":"object",
                    "description":"openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning."
                  }
                },
                "type":"object"
              },
              "version":{
                "description":"version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.",
                "type":"string"
              },
              "versions":{
                "description":"versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
                "items":{
                  "description":"CustomResourceDefinitionVersion describes a version for CRD.",
                  "properties":{
                    "additionalPrinterColumns":{
                      "description":"additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.",
                      "items":{
                        "description":"CustomResourceColumnDefinition specifies a column for server side printing.",
                        "properties":{
                          "JSONPath":{
                            "description":"JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.",
                            "type":"string"
                          },
                          "description":{
                            "description":"description is a human readable description of this column.",
                            "type":"string"
                          },
                          "format":{
                            "description":"format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
                            "type":"string"
                          },
                          "name":{
                            "description":"name is a human readable name for the column.",
                            "type":"string"
                          },
                          "priority":{
                            "description":"priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.",
                            "format":"int32",
                            "type":"integer"
                          },
                          "type":{
                            "description":"type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
                            "type":"string"
                          }
                        },
                        "required":[
                          "name",
                          "type",
                          "JSONPath"
                        ],
                        "type":"object"
                      },
                      "type":"array"
                    },
                    "name":{
                      "description":"name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.",
                      "type":"string"
                    },
                    "schema":{
                      "description":"schema describes the schema used for validation and pruning of this version of the custom resource. Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).",
                      "properties":{
                        "openAPIV3Schema":{
                          "type":"object",
                          "description":"openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning."
                        }
                      },
                      "type":"object"
                    },
                    "served":{
                      "description":"served is a flag enabling/disabling this version from being served via REST APIs",
                      "type":"boolean"
                    },
                    "storage":{
                      "description":"storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.",
                      "type":"boolean"
                    },
                    "subresources":{
                      "description":"subresources specify what subresources this version of the defined custom resource have. Top-level and per-version subresources are mutually exclusive. Per-version subresources must not all be set to identical values (top-level subresources should be used instead).",
                      "properties":{
                        "scale":{
                          "description":"scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.",
                          "properties":{
                            "labelSelectorPath":{
                              "description":"labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.",
                              "type":"string"
                            },
                            "specReplicasPath":{
                              "description":"specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.",
                              "type":"string"
                            },
                            "statusReplicasPath":{
                              "description":"statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.",
                              "type":"string"
                            }
                          },
                          "required":[
                            "specReplicasPath",
                            "statusReplicasPath"
                          ],
                          "type":"object"
                        },
                        "status":{
                          "description":"status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.",
                          "type":"object"
                        }
                      },
                      "type":"object"
                    }
                  },
                  "required":[
                    "name",
                    "served",
                    "storage"
                  ],
                  "type":"object"
                },
                "type":"array"
              }
            },
            "required":[
              "group",
              "names",
              "scope"
            ],
            "type":"object"
          },
          "status":{
            "description":"status indicates the actual state of the CustomResourceDefinition",
            "properties":{
              "acceptedNames":{
                "description":"acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.",
                "properties":{
                  "categories":{
                    "description":"categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.",
                    "items":{
                      "type":"string"
                    },
                    "type":"array"
                  },
                  "kind":{
                    "description":"kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.",
                    "type":"string"
                  },
                  "listKind":{
                    "description":"listKind is the serialized kind of the list for this resource. Defaults to \"`kind`List\".",
                    "type":"string"
                  },
                  "plural":{
                    "description":"plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.",
                    "type":"string"
                  },
                  "shortNames":{
                    "description":"shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.",
                    "items":{
                      "type":"string"
                    },
                    "type":"array"
                  },
                  "singular":{
                    "description":"singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.",
                    "type":"string"
                  }
                },
                "required":[
                  "plural",
                  "kind"
                ],
                "type":"object"
              },
              "conditions":{
                "description":"conditions indicate state for particular aspects of a CustomResourceDefinition",
                "items":{
                  "description":"CustomResourceDefinitionCondition contains details for the current condition of this pod.",
                  "properties":{
                    "lastTransitionTime":{
                      "description":"lastTransitionTime last time the condition transitioned from one status to another.",
                      "format":"date-time",
                      "type":"string"
                    },
                    "message":{
                      "description":"message is a human-readable message indicating details about last transition.",
                      "type":"string"
                    },
                    "reason":{
                      "description":"reason is a unique, one-word, CamelCase reason for the condition's last transition.",
                      "type":"string"
                    },
                    "status":{
                      "description":"status is the status of the condition. Can be True, False, Unknown.",
                      "type":"string"
                    },
                    "type":{
                      "description":"type is the type of the condition. Types include Established, NamesAccepted and Terminating.",
                      "type":"string"
                    }
                  },
                  "required":[
                    "type",
                    "status"
                  ],
                  "type":"object"
                },
                "type":"array"
              },
              "storedVersions":{
                "description":"storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.",
                "items":{
                  "type":"string"
                },
                "type":"array"
              }
            },
            "required":[
              "acceptedNames",
              "storedVersions"
            ],
            "type":"object"
          }
        },
        "required":[
          "spec"
        ],
        "type":"object",
        "x-kubernetes-group-version-kind":[
          {
            "group":"apiextensions.k8s.io",
            "kind":"CustomResourceDefinition",
            "version":"v1beta1"
          }
        ]
      },
      "type":"array"
    },
    "kind":{
      "description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type":"string"
    },
    "metadata":{
      "description":"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "properties":{
        "continue":{
          "description":"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type":"string"
        },
        "remainingItemCount":{
          "description":"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "format":"int64",
          "type":"integer"
        },
        "resourceVersion":{
          "description":"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type":"string"
        },
        "selfLink":{
          "description":"selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type":"string"
        }
      },
      "type":"object"
    }
  },
  "required":[
    "items"
  ],
  "type":"object",
  "x-kubernetes-group-version-kind":[
    {
      "group":"apiextensions.k8s.io",
      "kind":"CustomResourceDefinitionList",
      "version":"v1beta1"
    }
  ]
}