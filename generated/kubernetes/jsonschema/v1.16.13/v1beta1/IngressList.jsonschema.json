{
  "description":"IngressList is a collection of Ingress.",
  "properties":{
    "apiVersion":{
      "description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type":"string"
    },
    "items":{
      "description":"Items is the list of Ingress.",
      "items":{
        "description":"Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc. DEPRECATED - This group version of Ingress is deprecated by networking.k8s.io/v1beta1 Ingress. See the release notes for more information.",
        "properties":{
          "apiVersion":{
            "description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type":"string"
          },
          "kind":{
            "description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type":"string"
          },
          "metadata":{
            "description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "properties":{
              "annotations":{
                "additionalProperties":{
                  "type":"string"
                },
                "description":"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type":"object"
              },
              "clusterName":{
                "description":"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type":"string"
              },
              "creationTimestamp":{
                "description":"CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                "format":"date-time",
                "type":"string"
              },
              "deletionGracePeriodSeconds":{
                "description":"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "format":"int64",
                "type":"integer"
              },
              "deletionTimestamp":{
                "description":"DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                "format":"date-time",
                "type":"string"
              },
              "finalizers":{
                "description":"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
                "items":{
                  "type":"string"
                },
                "type":"array"
              },
              "generateName":{
                "description":"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type":"string"
              },
              "generation":{
                "description":"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "format":"int64",
                "type":"integer"
              },
              "labels":{
                "additionalProperties":{
                  "type":"string"
                },
                "description":"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type":"object"
              },
              "managedFields":{
                "description":"ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "items":{
                  "description":"ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "properties":{
                    "apiVersion":{
                      "description":"APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type":"string"
                    },
                    "fieldsType":{
                      "description":"FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type":"string"
                    },
                    "fieldsV1":{
                      "description":"FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
                      "type":"object"
                    },
                    "manager":{
                      "description":"Manager is an identifier of the workflow managing these fields.",
                      "type":"string"
                    },
                    "operation":{
                      "description":"Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type":"string"
                    },
                    "time":{
                      "description":"Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'",
                      "format":"date-time",
                      "type":"string"
                    }
                  },
                  "type":"object"
                },
                "type":"array"
              },
              "name":{
                "description":"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type":"string"
              },
              "namespace":{
                "description":"Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type":"string"
              },
              "ownerReferences":{
                "description":"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "items":{
                  "description":"OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "properties":{
                    "apiVersion":{
                      "description":"API version of the referent.",
                      "type":"string"
                    },
                    "blockOwnerDeletion":{
                      "description":"If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type":"boolean"
                    },
                    "controller":{
                      "description":"If true, this reference points to the managing controller.",
                      "type":"boolean"
                    },
                    "kind":{
                      "description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type":"string"
                    },
                    "name":{
                      "description":"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type":"string"
                    },
                    "uid":{
                      "description":"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type":"string"
                    }
                  },
                  "required":[
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "type":"object"
                },
                "type":"array"
              },
              "resourceVersion":{
                "description":"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type":"string"
              },
              "selfLink":{
                "description":"SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
                "type":"string"
              },
              "uid":{
                "description":"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type":"string"
              }
            },
            "type":"object"
          },
          "spec":{
            "description":"Spec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "properties":{
              "backend":{
                "description":"A default backend capable of servicing requests that don't match any rule. At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default.",
                "properties":{
                  "serviceName":{
                    "description":"Specifies the name of the referenced service.",
                    "type":"string"
                  },
                  "servicePort":{
                    "description":"Specifies the port of the referenced service.",
                    "format":"int-or-string",
                    "type":"string"
                  }
                },
                "required":[
                  "serviceName",
                  "servicePort"
                ],
                "type":"object"
              },
              "rules":{
                "description":"A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.",
                "items":{
                  "description":"IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
                  "properties":{
                    "host":{
                      "description":"Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.",
                      "type":"string"
                    },
                    "http":{
                      "description":"HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
                      "properties":{
                        "paths":{
                          "description":"A collection of paths that map requests to backends.",
                          "items":{
                            "description":"HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.",
                            "properties":{
                              "backend":{
                                "description":"Backend defines the referenced service endpoint to which the traffic will be forwarded to.",
                                "properties":{
                                  "serviceName":{
                                    "description":"Specifies the name of the referenced service.",
                                    "type":"string"
                                  },
                                  "servicePort":{
                                    "description":"Specifies the port of the referenced service.",
                                    "format":"int-or-string",
                                    "type":"string"
                                  }
                                },
                                "required":[
                                  "serviceName",
                                  "servicePort"
                                ],
                                "type":"object"
                              },
                              "path":{
                                "description":"Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.",
                                "type":"string"
                              }
                            },
                            "required":[
                              "backend"
                            ],
                            "type":"object"
                          },
                          "type":"array"
                        }
                      },
                      "required":[
                        "paths"
                      ],
                      "type":"object"
                    }
                  },
                  "type":"object"
                },
                "type":"array"
              },
              "tls":{
                "description":"TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
                "items":{
                  "description":"IngressTLS describes the transport layer security associated with an Ingress.",
                  "properties":{
                    "hosts":{
                      "description":"Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
                      "items":{
                        "type":"string"
                      },
                      "type":"array"
                    },
                    "secretName":{
                      "description":"SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.",
                      "type":"string"
                    }
                  },
                  "type":"object"
                },
                "type":"array"
              }
            },
            "type":"object"
          },
          "status":{
            "description":"Status is the current state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "properties":{
              "loadBalancer":{
                "description":"LoadBalancer contains the current status of the load-balancer.",
                "properties":{
                  "ingress":{
                    "description":"Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.",
                    "items":{
                      "description":"LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
                      "properties":{
                        "hostname":{
                          "description":"Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)",
                          "type":"string"
                        },
                        "ip":{
                          "description":"IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)",
                          "type":"string"
                        }
                      },
                      "type":"object"
                    },
                    "type":"array"
                  }
                },
                "type":"object"
              }
            },
            "type":"object"
          }
        },
        "type":"object",
        "x-kubernetes-group-version-kind":[
          {
            "group":"extensions",
            "kind":"Ingress",
            "version":"v1beta1"
          }
        ]
      },
      "type":"array"
    },
    "kind":{
      "description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type":"string"
    },
    "metadata":{
      "description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "properties":{
        "continue":{
          "description":"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type":"string"
        },
        "remainingItemCount":{
          "description":"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "format":"int64",
          "type":"integer"
        },
        "resourceVersion":{
          "description":"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type":"string"
        },
        "selfLink":{
          "description":"selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type":"string"
        }
      },
      "type":"object"
    }
  },
  "required":[
    "items"
  ],
  "type":"object",
  "x-kubernetes-group-version-kind":[
    {
      "group":"extensions",
      "kind":"IngressList",
      "version":"v1beta1"
    }
  ]
}