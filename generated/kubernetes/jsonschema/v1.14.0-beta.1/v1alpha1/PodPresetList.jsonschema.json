{
  "description":"PodPresetList is a list of PodPreset objects.",
  "properties":{
    "apiVersion":{
      "description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type":"string"
    },
    "items":{
      "description":"Items is a list of schema objects.",
      "items":{
        "description":"PodPreset is a policy resource that defines additional runtime requirements for a Pod.",
        "properties":{
          "apiVersion":{
            "description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
            "type":"string"
          },
          "kind":{
            "description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "type":"string"
          },
          "metadata":{
            "description":"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "properties":{
              "annotations":{
                "additionalProperties":{
                  "type":"string"
                },
                "description":"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type":"object"
              },
              "clusterName":{
                "description":"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type":"string"
              },
              "creationTimestamp":{
                "description":"CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "format":"date-time",
                "type":"string"
              },
              "deletionGracePeriodSeconds":{
                "description":"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "format":"int64",
                "type":"integer"
              },
              "deletionTimestamp":{
                "description":"DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                "format":"date-time",
                "type":"string"
              },
              "finalizers":{
                "description":"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
                "items":{
                  "type":"string"
                },
                "type":"array"
              },
              "generateName":{
                "description":"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
                "type":"string"
              },
              "generation":{
                "description":"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "format":"int64",
                "type":"integer"
              },
              "initializers":{
                "description":"An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.\n\nDEPRECATED - initializers are an alpha field and will be removed in v1.15.",
                "properties":{
                  "pending":{
                    "description":"Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
                    "items":{
                      "description":"Initializer is information about an initializer that has not yet completed.",
                      "properties":{
                        "name":{
                          "description":"name of the process that is responsible for initializing this object.",
                          "type":"string"
                        }
                      },
                      "required":[
                        "name"
                      ],
                      "type":"object"
                    },
                    "type":"array"
                  },
                  "result":{
                    "description":"If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion.",
                    "properties":{
                      "apiVersion":{
                        "description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                        "type":"string"
                      },
                      "code":{
                        "description":"Suggested HTTP return code for this status, 0 if not set.",
                        "format":"int32",
                        "type":"integer"
                      },
                      "details":{
                        "description":"Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
                        "properties":{
                          "causes":{
                            "description":"The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
                            "items":{
                              "description":"StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
                              "properties":{
                                "field":{
                                  "description":"The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
                                  "type":"string"
                                },
                                "message":{
                                  "description":"A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
                                  "type":"string"
                                },
                                "reason":{
                                  "description":"A machine-readable description of the cause of the error. If this value is empty there is no information available.",
                                  "type":"string"
                                }
                              },
                              "type":"object"
                            },
                            "type":"array"
                          },
                          "group":{
                            "description":"The group attribute of the resource associated with the status StatusReason.",
                            "type":"string"
                          },
                          "kind":{
                            "description":"The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                            "type":"string"
                          },
                          "name":{
                            "description":"The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
                            "type":"string"
                          },
                          "retryAfterSeconds":{
                            "description":"If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
                            "format":"int32",
                            "type":"integer"
                          },
                          "uid":{
                            "description":"UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                            "type":"string"
                          }
                        },
                        "type":"object"
                      },
                      "kind":{
                        "description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                        "type":"string"
                      },
                      "message":{
                        "description":"A human-readable description of the status of this operation.",
                        "type":"string"
                      },
                      "metadata":{
                        "description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                        "properties":{
                          "continue":{
                            "description":"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
                            "type":"string"
                          },
                          "resourceVersion":{
                            "description":"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                            "type":"string"
                          },
                          "selfLink":{
                            "description":"selfLink is a URL representing this object. Populated by the system. Read-only.",
                            "type":"string"
                          }
                        },
                        "type":"object"
                      },
                      "reason":{
                        "description":"A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
                        "type":"string"
                      },
                      "status":{
                        "description":"Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                        "type":"string"
                      }
                    },
                    "type":"object",
                    "x-kubernetes-group-version-kind":[
                      {
                        "group":"",
                        "kind":"Status",
                        "version":"v1"
                      }
                    ]
                  }
                },
                "required":[
                  "pending"
                ],
                "type":"object"
              },
              "labels":{
                "additionalProperties":{
                  "type":"string"
                },
                "description":"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type":"object"
              },
              "managedFields":{
                "description":"ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.\n\nThis field is alpha and can be changed or removed without notice.",
                "items":{
                  "description":"ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "properties":{
                    "apiVersion":{
                      "description":"APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type":"string"
                    },
                    "fields":{
                      "description":"Fields identifies a set of fields.",
                      "type":"object"
                    },
                    "manager":{
                      "description":"Manager is an identifier of the workflow managing these fields.",
                      "type":"string"
                    },
                    "operation":{
                      "description":"Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type":"string"
                    },
                    "time":{
                      "description":"Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'",
                      "format":"date-time",
                      "type":"string"
                    }
                  },
                  "type":"object"
                },
                "type":"array"
              },
              "name":{
                "description":"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type":"string"
              },
              "namespace":{
                "description":"Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type":"string"
              },
              "ownerReferences":{
                "description":"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "items":{
                  "description":"OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "properties":{
                    "apiVersion":{
                      "description":"API version of the referent.",
                      "type":"string"
                    },
                    "blockOwnerDeletion":{
                      "description":"If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type":"boolean"
                    },
                    "controller":{
                      "description":"If true, this reference points to the managing controller.",
                      "type":"boolean"
                    },
                    "kind":{
                      "description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                      "type":"string"
                    },
                    "name":{
                      "description":"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type":"string"
                    },
                    "uid":{
                      "description":"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type":"string"
                    }
                  },
                  "required":[
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "type":"object"
                },
                "type":"array"
              },
              "resourceVersion":{
                "description":"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                "type":"string"
              },
              "selfLink":{
                "description":"SelfLink is a URL representing this object. Populated by the system. Read-only.",
                "type":"string"
              },
              "uid":{
                "description":"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type":"string"
              }
            },
            "type":"object"
          },
          "spec":{
            "description":"PodPresetSpec is a description of a pod preset.",
            "properties":{
              "env":{
                "description":"Env defines the collection of EnvVar to inject into containers.",
                "items":{
                  "description":"EnvVar represents an environment variable present in a Container.",
                  "properties":{
                    "name":{
                      "description":"Name of the environment variable. Must be a C_IDENTIFIER.",
                      "type":"string"
                    },
                    "value":{
                      "description":"Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                      "type":"string"
                    },
                    "valueFrom":{
                      "description":"Source for the environment variable's value. Cannot be used if value is not empty.",
                      "properties":{
                        "configMapKeyRef":{
                          "description":"Selects a key of a ConfigMap.",
                          "properties":{
                            "key":{
                              "description":"The key to select.",
                              "type":"string"
                            },
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            },
                            "optional":{
                              "description":"Specify whether the ConfigMap or it's key must be defined",
                              "type":"boolean"
                            }
                          },
                          "required":[
                            "key"
                          ],
                          "type":"object"
                        },
                        "fieldRef":{
                          "description":"Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.",
                          "properties":{
                            "apiVersion":{
                              "description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                              "type":"string"
                            },
                            "fieldPath":{
                              "description":"Path of the field to select in the specified API version.",
                              "type":"string"
                            }
                          },
                          "required":[
                            "fieldPath"
                          ],
                          "type":"object"
                        },
                        "resourceFieldRef":{
                          "description":"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                          "properties":{
                            "containerName":{
                              "description":"Container name: required for volumes, optional for env vars",
                              "type":"string"
                            },
                            "divisor":{
                              "description":"Specifies the output format of the exposed resources, defaults to \"1\"",
                              "type":"string"
                            },
                            "resource":{
                              "description":"Required: resource to select",
                              "type":"string"
                            }
                          },
                          "required":[
                            "resource"
                          ],
                          "type":"object"
                        },
                        "secretKeyRef":{
                          "description":"Selects a key of a secret in the pod's namespace",
                          "properties":{
                            "key":{
                              "description":"The key of the secret to select from.  Must be a valid secret key.",
                              "type":"string"
                            },
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            },
                            "optional":{
                              "description":"Specify whether the Secret or it's key must be defined",
                              "type":"boolean"
                            }
                          },
                          "required":[
                            "key"
                          ],
                          "type":"object"
                        }
                      },
                      "type":"object"
                    }
                  },
                  "required":[
                    "name"
                  ],
                  "type":"object"
                },
                "type":"array"
              },
              "envFrom":{
                "description":"EnvFrom defines the collection of EnvFromSource to inject into containers.",
                "items":{
                  "description":"EnvFromSource represents the source of a set of ConfigMaps",
                  "properties":{
                    "configMapRef":{
                      "description":"The ConfigMap to select from",
                      "properties":{
                        "name":{
                          "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type":"string"
                        },
                        "optional":{
                          "description":"Specify whether the ConfigMap must be defined",
                          "type":"boolean"
                        }
                      },
                      "type":"object"
                    },
                    "prefix":{
                      "description":"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                      "type":"string"
                    },
                    "secretRef":{
                      "description":"The Secret to select from",
                      "properties":{
                        "name":{
                          "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type":"string"
                        },
                        "optional":{
                          "description":"Specify whether the Secret must be defined",
                          "type":"boolean"
                        }
                      },
                      "type":"object"
                    }
                  },
                  "type":"object"
                },
                "type":"array"
              },
              "selector":{
                "description":"Selector is a label query over a set of resources, in this case pods. Required.",
                "properties":{
                  "matchExpressions":{
                    "description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "items":{
                      "description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                      "properties":{
                        "key":{
                          "description":"key is the label key that the selector applies to.",
                          "type":"string"
                        },
                        "operator":{
                          "description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                          "type":"string"
                        },
                        "values":{
                          "description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "items":{
                            "type":"string"
                          },
                          "type":"array"
                        }
                      },
                      "required":[
                        "key",
                        "operator"
                      ],
                      "type":"object"
                    },
                    "type":"array"
                  },
                  "matchLabels":{
                    "additionalProperties":{
                      "type":"string"
                    },
                    "description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type":"object"
                  }
                },
                "type":"object"
              },
              "volumeMounts":{
                "description":"VolumeMounts defines the collection of VolumeMount to inject into containers.",
                "items":{
                  "description":"VolumeMount describes a mounting of a Volume within a container.",
                  "properties":{
                    "mountPath":{
                      "description":"Path within the container at which the volume should be mounted.  Must not contain ':'.",
                      "type":"string"
                    },
                    "mountPropagation":{
                      "description":"mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                      "type":"string"
                    },
                    "name":{
                      "description":"This must match the Name of a Volume.",
                      "type":"string"
                    },
                    "readOnly":{
                      "description":"Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                      "type":"boolean"
                    },
                    "subPath":{
                      "description":"Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                      "type":"string"
                    },
                    "subPathExpr":{
                      "description":"Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is alpha in 1.14.",
                      "type":"string"
                    }
                  },
                  "required":[
                    "name",
                    "mountPath"
                  ],
                  "type":"object"
                },
                "type":"array"
              },
              "volumes":{
                "description":"Volumes defines the collection of Volume to inject into the pod.",
                "items":{
                  "description":"Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                  "properties":{
                    "awsElasticBlockStore":{
                      "description":"AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type":"string"
                        },
                        "partition":{
                          "description":"The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                          "format":"int32",
                          "type":"integer"
                        },
                        "readOnly":{
                          "description":"Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type":"boolean"
                        },
                        "volumeID":{
                          "description":"Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type":"string"
                        }
                      },
                      "required":[
                        "volumeID"
                      ],
                      "type":"object"
                    },
                    "azureDisk":{
                      "description":"AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                      "properties":{
                        "cachingMode":{
                          "description":"Host Caching mode: None, Read Only, Read Write.",
                          "type":"string"
                        },
                        "diskName":{
                          "description":"The Name of the data disk in the blob storage",
                          "type":"string"
                        },
                        "diskURI":{
                          "description":"The URI the data disk in the blob storage",
                          "type":"string"
                        },
                        "fsType":{
                          "description":"Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type":"string"
                        },
                        "kind":{
                          "description":"Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                          "type":"boolean"
                        }
                      },
                      "required":[
                        "diskName",
                        "diskURI"
                      ],
                      "type":"object"
                    },
                    "azureFile":{
                      "description":"AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                      "properties":{
                        "readOnly":{
                          "description":"Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                          "type":"boolean"
                        },
                        "secretName":{
                          "description":"the name of secret that contains Azure Storage Account Name and Key",
                          "type":"string"
                        },
                        "shareName":{
                          "description":"Share Name",
                          "type":"string"
                        }
                      },
                      "required":[
                        "secretName",
                        "shareName"
                      ],
                      "type":"object"
                    },
                    "cephfs":{
                      "description":"CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                      "properties":{
                        "monitors":{
                          "description":"Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "items":{
                            "type":"string"
                          },
                          "type":"array"
                        },
                        "path":{
                          "description":"Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "type":"boolean"
                        },
                        "secretFile":{
                          "description":"Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "type":"string"
                        },
                        "secretRef":{
                          "description":"Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "properties":{
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            }
                          },
                          "type":"object"
                        },
                        "user":{
                          "description":"Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                          "type":"string"
                        }
                      },
                      "required":[
                        "monitors"
                      ],
                      "type":"object"
                    },
                    "cinder":{
                      "description":"Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                          "type":"boolean"
                        },
                        "secretRef":{
                          "description":"Optional: points to a secret object containing parameters used to connect to OpenStack.",
                          "properties":{
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            }
                          },
                          "type":"object"
                        },
                        "volumeID":{
                          "description":"volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                          "type":"string"
                        }
                      },
                      "required":[
                        "volumeID"
                      ],
                      "type":"object"
                    },
                    "configMap":{
                      "description":"ConfigMap represents a configMap that should populate this volume",
                      "properties":{
                        "defaultMode":{
                          "description":"Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                          "format":"int32",
                          "type":"integer"
                        },
                        "items":{
                          "description":"If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                          "items":{
                            "description":"Maps a string key to a path within a volume.",
                            "properties":{
                              "key":{
                                "description":"The key to project.",
                                "type":"string"
                              },
                              "mode":{
                                "description":"Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                "format":"int32",
                                "type":"integer"
                              },
                              "path":{
                                "description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                "type":"string"
                              }
                            },
                            "required":[
                              "key",
                              "path"
                            ],
                            "type":"object"
                          },
                          "type":"array"
                        },
                        "name":{
                          "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type":"string"
                        },
                        "optional":{
                          "description":"Specify whether the ConfigMap or it's keys must be defined",
                          "type":"boolean"
                        }
                      },
                      "type":"object"
                    },
                    "downwardAPI":{
                      "description":"DownwardAPI represents downward API about the pod that should populate this volume",
                      "properties":{
                        "defaultMode":{
                          "description":"Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                          "format":"int32",
                          "type":"integer"
                        },
                        "items":{
                          "description":"Items is a list of downward API volume file",
                          "items":{
                            "description":"DownwardAPIVolumeFile represents information to create the file containing the pod field",
                            "properties":{
                              "fieldRef":{
                                "description":"Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                "properties":{
                                  "apiVersion":{
                                    "description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type":"string"
                                  },
                                  "fieldPath":{
                                    "description":"Path of the field to select in the specified API version.",
                                    "type":"string"
                                  }
                                },
                                "required":[
                                  "fieldPath"
                                ],
                                "type":"object"
                              },
                              "mode":{
                                "description":"Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                "format":"int32",
                                "type":"integer"
                              },
                              "path":{
                                "description":"Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                "type":"string"
                              },
                              "resourceFieldRef":{
                                "description":"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                "properties":{
                                  "containerName":{
                                    "description":"Container name: required for volumes, optional for env vars",
                                    "type":"string"
                                  },
                                  "divisor":{
                                    "description":"Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "type":"string"
                                  },
                                  "resource":{
                                    "description":"Required: resource to select",
                                    "type":"string"
                                  }
                                },
                                "required":[
                                  "resource"
                                ],
                                "type":"object"
                              }
                            },
                            "required":[
                              "path"
                            ],
                            "type":"object"
                          },
                          "type":"array"
                        }
                      },
                      "type":"object"
                    },
                    "emptyDir":{
                      "description":"EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                      "properties":{
                        "medium":{
                          "description":"What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                          "type":"string"
                        },
                        "sizeLimit":{
                          "description":"Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
                          "type":"string"
                        }
                      },
                      "type":"object"
                    },
                    "fc":{
                      "description":"FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type":"string"
                        },
                        "lun":{
                          "description":"Optional: FC target lun number",
                          "format":"int32",
                          "type":"integer"
                        },
                        "readOnly":{
                          "description":"Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                          "type":"boolean"
                        },
                        "targetWWNs":{
                          "description":"Optional: FC target worldwide names (WWNs)",
                          "items":{
                            "type":"string"
                          },
                          "type":"array"
                        },
                        "wwids":{
                          "description":"Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                          "items":{
                            "type":"string"
                          },
                          "type":"array"
                        }
                      },
                      "type":"object"
                    },
                    "flexVolume":{
                      "description":"FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
                      "properties":{
                        "driver":{
                          "description":"Driver is the name of the driver to use for this volume.",
                          "type":"string"
                        },
                        "fsType":{
                          "description":"Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                          "type":"string"
                        },
                        "options":{
                          "additionalProperties":{
                            "type":"string"
                          },
                          "description":"Optional: Extra command options if any.",
                          "type":"object"
                        },
                        "readOnly":{
                          "description":"Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                          "type":"boolean"
                        },
                        "secretRef":{
                          "description":"Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                          "properties":{
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            }
                          },
                          "type":"object"
                        }
                      },
                      "required":[
                        "driver"
                      ],
                      "type":"object"
                    },
                    "flocker":{
                      "description":"Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
                      "properties":{
                        "datasetName":{
                          "description":"Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                          "type":"string"
                        },
                        "datasetUUID":{
                          "description":"UUID of the dataset. This is unique identifier of a Flocker dataset",
                          "type":"string"
                        }
                      },
                      "type":"object"
                    },
                    "gcePersistentDisk":{
                      "description":"GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type":"string"
                        },
                        "partition":{
                          "description":"The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "format":"int32",
                          "type":"integer"
                        },
                        "pdName":{
                          "description":"Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type":"boolean"
                        }
                      },
                      "required":[
                        "pdName"
                      ],
                      "type":"object"
                    },
                    "gitRepo":{
                      "description":"GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
                      "properties":{
                        "directory":{
                          "description":"Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                          "type":"string"
                        },
                        "repository":{
                          "description":"Repository URL",
                          "type":"string"
                        },
                        "revision":{
                          "description":"Commit hash for the specified revision.",
                          "type":"string"
                        }
                      },
                      "required":[
                        "repository"
                      ],
                      "type":"object"
                    },
                    "glusterfs":{
                      "description":"Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
                      "properties":{
                        "endpoints":{
                          "description":"EndpointsName is the endpoint name that details Glusterfs topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                          "type":"string"
                        },
                        "path":{
                          "description":"Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                          "type":"boolean"
                        }
                      },
                      "required":[
                        "endpoints",
                        "path"
                      ],
                      "type":"object"
                    },
                    "hostPath":{
                      "description":"HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                      "properties":{
                        "path":{
                          "description":"Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                          "type":"string"
                        },
                        "type":{
                          "description":"Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                          "type":"string"
                        }
                      },
                      "required":[
                        "path"
                      ],
                      "type":"object"
                    },
                    "iscsi":{
                      "description":"ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md",
                      "properties":{
                        "chapAuthDiscovery":{
                          "description":"whether support iSCSI Discovery CHAP authentication",
                          "type":"boolean"
                        },
                        "chapAuthSession":{
                          "description":"whether support iSCSI Session CHAP authentication",
                          "type":"boolean"
                        },
                        "fsType":{
                          "description":"Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                          "type":"string"
                        },
                        "initiatorName":{
                          "description":"Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
                          "type":"string"
                        },
                        "iqn":{
                          "description":"Target iSCSI Qualified Name.",
                          "type":"string"
                        },
                        "iscsiInterface":{
                          "description":"iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                          "type":"string"
                        },
                        "lun":{
                          "description":"iSCSI Target Lun number.",
                          "format":"int32",
                          "type":"integer"
                        },
                        "portals":{
                          "description":"iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                          "items":{
                            "type":"string"
                          },
                          "type":"array"
                        },
                        "readOnly":{
                          "description":"ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
                          "type":"boolean"
                        },
                        "secretRef":{
                          "description":"CHAP Secret for iSCSI target and initiator authentication",
                          "properties":{
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            }
                          },
                          "type":"object"
                        },
                        "targetPortal":{
                          "description":"iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                          "type":"string"
                        }
                      },
                      "required":[
                        "targetPortal",
                        "iqn",
                        "lun"
                      ],
                      "type":"object"
                    },
                    "name":{
                      "description":"Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type":"string"
                    },
                    "nfs":{
                      "description":"NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                      "properties":{
                        "path":{
                          "description":"Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type":"boolean"
                        },
                        "server":{
                          "description":"Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type":"string"
                        }
                      },
                      "required":[
                        "server",
                        "path"
                      ],
                      "type":"object"
                    },
                    "persistentVolumeClaim":{
                      "description":"PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                      "properties":{
                        "claimName":{
                          "description":"ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"Will force the ReadOnly setting in VolumeMounts. Default false.",
                          "type":"boolean"
                        }
                      },
                      "required":[
                        "claimName"
                      ],
                      "type":"object"
                    },
                    "photonPersistentDisk":{
                      "description":"PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type":"string"
                        },
                        "pdID":{
                          "description":"ID that identifies Photon Controller persistent disk",
                          "type":"string"
                        }
                      },
                      "required":[
                        "pdID"
                      ],
                      "type":"object"
                    },
                    "portworxVolume":{
                      "description":"PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                      "properties":{
                        "fsType":{
                          "description":"FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                          "type":"boolean"
                        },
                        "volumeID":{
                          "description":"VolumeID uniquely identifies a Portworx volume",
                          "type":"string"
                        }
                      },
                      "required":[
                        "volumeID"
                      ],
                      "type":"object"
                    },
                    "projected":{
                      "description":"Items for all in one resources secrets, configmaps, and downward API",
                      "properties":{
                        "defaultMode":{
                          "description":"Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                          "format":"int32",
                          "type":"integer"
                        },
                        "sources":{
                          "description":"list of volume projections",
                          "items":{
                            "description":"Projection that may be projected along with other supported volume types",
                            "properties":{
                              "configMap":{
                                "description":"information about the configMap data to project",
                                "properties":{
                                  "items":{
                                    "description":"If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                    "items":{
                                      "description":"Maps a string key to a path within a volume.",
                                      "properties":{
                                        "key":{
                                          "description":"The key to project.",
                                          "type":"string"
                                        },
                                        "mode":{
                                          "description":"Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                          "format":"int32",
                                          "type":"integer"
                                        },
                                        "path":{
                                          "description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                          "type":"string"
                                        }
                                      },
                                      "required":[
                                        "key",
                                        "path"
                                      ],
                                      "type":"object"
                                    },
                                    "type":"array"
                                  },
                                  "name":{
                                    "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type":"string"
                                  },
                                  "optional":{
                                    "description":"Specify whether the ConfigMap or it's keys must be defined",
                                    "type":"boolean"
                                  }
                                },
                                "type":"object"
                              },
                              "downwardAPI":{
                                "description":"information about the downwardAPI data to project",
                                "properties":{
                                  "items":{
                                    "description":"Items is a list of DownwardAPIVolume file",
                                    "items":{
                                      "description":"DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                      "properties":{
                                        "fieldRef":{
                                          "description":"Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                          "properties":{
                                            "apiVersion":{
                                              "description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "type":"string"
                                            },
                                            "fieldPath":{
                                              "description":"Path of the field to select in the specified API version.",
                                              "type":"string"
                                            }
                                          },
                                          "required":[
                                            "fieldPath"
                                          ],
                                          "type":"object"
                                        },
                                        "mode":{
                                          "description":"Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                          "format":"int32",
                                          "type":"integer"
                                        },
                                        "path":{
                                          "description":"Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                          "type":"string"
                                        },
                                        "resourceFieldRef":{
                                          "description":"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                          "properties":{
                                            "containerName":{
                                              "description":"Container name: required for volumes, optional for env vars",
                                              "type":"string"
                                            },
                                            "divisor":{
                                              "description":"Specifies the output format of the exposed resources, defaults to \"1\"",
                                              "type":"string"
                                            },
                                            "resource":{
                                              "description":"Required: resource to select",
                                              "type":"string"
                                            }
                                          },
                                          "required":[
                                            "resource"
                                          ],
                                          "type":"object"
                                        }
                                      },
                                      "required":[
                                        "path"
                                      ],
                                      "type":"object"
                                    },
                                    "type":"array"
                                  }
                                },
                                "type":"object"
                              },
                              "secret":{
                                "description":"information about the secret data to project",
                                "properties":{
                                  "items":{
                                    "description":"If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                    "items":{
                                      "description":"Maps a string key to a path within a volume.",
                                      "properties":{
                                        "key":{
                                          "description":"The key to project.",
                                          "type":"string"
                                        },
                                        "mode":{
                                          "description":"Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                          "format":"int32",
                                          "type":"integer"
                                        },
                                        "path":{
                                          "description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                          "type":"string"
                                        }
                                      },
                                      "required":[
                                        "key",
                                        "path"
                                      ],
                                      "type":"object"
                                    },
                                    "type":"array"
                                  },
                                  "name":{
                                    "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type":"string"
                                  },
                                  "optional":{
                                    "description":"Specify whether the Secret or its key must be defined",
                                    "type":"boolean"
                                  }
                                },
                                "type":"object"
                              },
                              "serviceAccountToken":{
                                "description":"information about the serviceAccountToken data to project",
                                "properties":{
                                  "audience":{
                                    "description":"Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
                                    "type":"string"
                                  },
                                  "expirationSeconds":{
                                    "description":"ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
                                    "format":"int64",
                                    "type":"integer"
                                  },
                                  "path":{
                                    "description":"Path is the path relative to the mount point of the file to project the token into.",
                                    "type":"string"
                                  }
                                },
                                "required":[
                                  "path"
                                ],
                                "type":"object"
                              }
                            },
                            "type":"object"
                          },
                          "type":"array"
                        }
                      },
                      "required":[
                        "sources"
                      ],
                      "type":"object"
                    },
                    "quobyte":{
                      "description":"Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                      "properties":{
                        "group":{
                          "description":"Group to map volume access to Default is no group",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                          "type":"boolean"
                        },
                        "registry":{
                          "description":"Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                          "type":"string"
                        },
                        "tenant":{
                          "description":"Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
                          "type":"string"
                        },
                        "user":{
                          "description":"User to map volume access to Defaults to serivceaccount user",
                          "type":"string"
                        },
                        "volume":{
                          "description":"Volume is a string that references an already created Quobyte volume by name.",
                          "type":"string"
                        }
                      },
                      "required":[
                        "registry",
                        "volume"
                      ],
                      "type":"object"
                    },
                    "rbd":{
                      "description":"RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                          "type":"string"
                        },
                        "image":{
                          "description":"The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "type":"string"
                        },
                        "keyring":{
                          "description":"Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "type":"string"
                        },
                        "monitors":{
                          "description":"A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "items":{
                            "type":"string"
                          },
                          "type":"array"
                        },
                        "pool":{
                          "description":"The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "type":"boolean"
                        },
                        "secretRef":{
                          "description":"SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "properties":{
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            }
                          },
                          "type":"object"
                        },
                        "user":{
                          "description":"The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                          "type":"string"
                        }
                      },
                      "required":[
                        "monitors",
                        "image"
                      ],
                      "type":"object"
                    },
                    "scaleIO":{
                      "description":"ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
                          "type":"string"
                        },
                        "gateway":{
                          "description":"The host address of the ScaleIO API Gateway.",
                          "type":"string"
                        },
                        "protectionDomain":{
                          "description":"The name of the ScaleIO Protection Domain for the configured storage.",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                          "type":"boolean"
                        },
                        "secretRef":{
                          "description":"SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
                          "properties":{
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            }
                          },
                          "type":"object"
                        },
                        "sslEnabled":{
                          "description":"Flag to enable/disable SSL communication with Gateway, default false",
                          "type":"boolean"
                        },
                        "storageMode":{
                          "description":"Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
                          "type":"string"
                        },
                        "storagePool":{
                          "description":"The ScaleIO Storage Pool associated with the protection domain.",
                          "type":"string"
                        },
                        "system":{
                          "description":"The name of the storage system as configured in ScaleIO.",
                          "type":"string"
                        },
                        "volumeName":{
                          "description":"The name of a volume already created in the ScaleIO system that is associated with this volume source.",
                          "type":"string"
                        }
                      },
                      "required":[
                        "gateway",
                        "system",
                        "secretRef"
                      ],
                      "type":"object"
                    },
                    "secret":{
                      "description":"Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                      "properties":{
                        "defaultMode":{
                          "description":"Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                          "format":"int32",
                          "type":"integer"
                        },
                        "items":{
                          "description":"If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                          "items":{
                            "description":"Maps a string key to a path within a volume.",
                            "properties":{
                              "key":{
                                "description":"The key to project.",
                                "type":"string"
                              },
                              "mode":{
                                "description":"Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                "format":"int32",
                                "type":"integer"
                              },
                              "path":{
                                "description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                "type":"string"
                              }
                            },
                            "required":[
                              "key",
                              "path"
                            ],
                            "type":"object"
                          },
                          "type":"array"
                        },
                        "optional":{
                          "description":"Specify whether the Secret or it's keys must be defined",
                          "type":"boolean"
                        },
                        "secretName":{
                          "description":"Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                          "type":"string"
                        }
                      },
                      "type":"object"
                    },
                    "storageos":{
                      "description":"StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type":"string"
                        },
                        "readOnly":{
                          "description":"Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                          "type":"boolean"
                        },
                        "secretRef":{
                          "description":"SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.",
                          "properties":{
                            "name":{
                              "description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type":"string"
                            }
                          },
                          "type":"object"
                        },
                        "volumeName":{
                          "description":"VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
                          "type":"string"
                        },
                        "volumeNamespace":{
                          "description":"VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
                          "type":"string"
                        }
                      },
                      "type":"object"
                    },
                    "vsphereVolume":{
                      "description":"VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                      "properties":{
                        "fsType":{
                          "description":"Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                          "type":"string"
                        },
                        "storagePolicyID":{
                          "description":"Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                          "type":"string"
                        },
                        "storagePolicyName":{
                          "description":"Storage Policy Based Management (SPBM) profile name.",
                          "type":"string"
                        },
                        "volumePath":{
                          "description":"Path that identifies vSphere volume vmdk",
                          "type":"string"
                        }
                      },
                      "required":[
                        "volumePath"
                      ],
                      "type":"object"
                    }
                  },
                  "required":[
                    "name"
                  ],
                  "type":"object"
                },
                "type":"array"
              }
            },
            "type":"object"
          }
        },
        "type":"object",
        "x-kubernetes-group-version-kind":[
          {
            "group":"settings.k8s.io",
            "kind":"PodPreset",
            "version":"v1alpha1"
          }
        ]
      },
      "type":"array"
    },
    "kind":{
      "description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type":"string"
    },
    "metadata":{
      "description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "properties":{
        "continue":{
          "description":"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type":"string"
        },
        "resourceVersion":{
          "description":"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
          "type":"string"
        },
        "selfLink":{
          "description":"selfLink is a URL representing this object. Populated by the system. Read-only.",
          "type":"string"
        }
      },
      "type":"object"
    }
  },
  "required":[
    "items"
  ],
  "type":"object",
  "x-kubernetes-group-version-kind":[
    {
      "group":"settings.k8s.io",
      "kind":"PodPresetList",
      "version":"v1alpha1"
    }
  ]
}