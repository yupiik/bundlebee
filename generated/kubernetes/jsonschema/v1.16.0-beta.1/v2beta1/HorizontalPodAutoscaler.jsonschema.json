{
  "description":"HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.",
  "properties":{
    "apiVersion":{
      "description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type":"string"
    },
    "kind":{
      "description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type":"string"
    },
    "metadata":{
      "description":"metadata is the standard object metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "properties":{
        "annotations":{
          "additionalProperties":{
            "type":"string"
          },
          "description":"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type":"object"
        },
        "clusterName":{
          "description":"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type":"string"
        },
        "creationTimestamp":{
          "description":"CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
          "format":"date-time",
          "type":"string"
        },
        "deletionGracePeriodSeconds":{
          "description":"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "format":"int64",
          "type":"integer"
        },
        "deletionTimestamp":{
          "description":"DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
          "format":"date-time",
          "type":"string"
        },
        "finalizers":{
          "description":"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
          "items":{
            "type":"string"
          },
          "type":"array"
        },
        "generateName":{
          "description":"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
          "type":"string"
        },
        "generation":{
          "description":"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "format":"int64",
          "type":"integer"
        },
        "labels":{
          "additionalProperties":{
            "type":"string"
          },
          "description":"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type":"object"
        },
        "managedFields":{
          "description":"ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.\n\nThis field is alpha and can be changed or removed without notice.",
          "items":{
            "description":"ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "properties":{
              "apiVersion":{
                "description":"APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type":"string"
              },
              "fields":{
                "description":"Fields identifies a set of fields.",
                "type":"object"
              },
              "manager":{
                "description":"Manager is an identifier of the workflow managing these fields.",
                "type":"string"
              },
              "operation":{
                "description":"Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type":"string"
              },
              "time":{
                "description":"Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'",
                "format":"date-time",
                "type":"string"
              }
            },
            "type":"object"
          },
          "type":"array"
        },
        "name":{
          "description":"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type":"string"
        },
        "namespace":{
          "description":"Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type":"string"
        },
        "ownerReferences":{
          "description":"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "items":{
            "description":"OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "properties":{
              "apiVersion":{
                "description":"API version of the referent.",
                "type":"string"
              },
              "blockOwnerDeletion":{
                "description":"If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type":"boolean"
              },
              "controller":{
                "description":"If true, this reference points to the managing controller.",
                "type":"boolean"
              },
              "kind":{
                "description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                "type":"string"
              },
              "name":{
                "description":"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type":"string"
              },
              "uid":{
                "description":"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type":"string"
              }
            },
            "required":[
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "type":"object"
          },
          "type":"array"
        },
        "resourceVersion":{
          "description":"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
          "type":"string"
        },
        "selfLink":{
          "description":"SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type":"string"
        },
        "uid":{
          "description":"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type":"string"
        }
      },
      "type":"object"
    },
    "spec":{
      "description":"spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
      "properties":{
        "maxReplicas":{
          "description":"maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.",
          "format":"int32",
          "type":"integer"
        },
        "metrics":{
          "description":"metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond.",
          "items":{
            "description":"MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).",
            "properties":{
              "external":{
                "description":"external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
                "properties":{
                  "metricName":{
                    "description":"metricName is the name of the metric in question.",
                    "type":"string"
                  },
                  "metricSelector":{
                    "description":"metricSelector is used to identify a specific time series within a given metric.",
                    "properties":{
                      "matchExpressions":{
                        "description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items":{
                          "description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "properties":{
                            "key":{
                              "description":"key is the label key that the selector applies to.",
                              "type":"string"
                            },
                            "operator":{
                              "description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                              "type":"string"
                            },
                            "values":{
                              "description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                              "items":{
                                "type":"string"
                              },
                              "type":"array"
                            }
                          },
                          "required":[
                            "key",
                            "operator"
                          ],
                          "type":"object"
                        },
                        "type":"array"
                      },
                      "matchLabels":{
                        "additionalProperties":{
                          "type":"string"
                        },
                        "description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type":"object"
                      }
                    },
                    "type":"object"
                  },
                  "targetAverageValue":{
                    "description":"targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue.",
                    "type":"string"
                  },
                  "targetValue":{
                    "description":"targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue.",
                    "type":"string"
                  }
                },
                "required":[
                  "metricName"
                ],
                "type":"object"
              },
              "object":{
                "description":"object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).",
                "properties":{
                  "averageValue":{
                    "description":"averageValue is the target value of the average of the metric across all relevant pods (as a quantity)",
                    "type":"string"
                  },
                  "metricName":{
                    "description":"metricName is the name of the metric in question.",
                    "type":"string"
                  },
                  "selector":{
                    "description":"selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.",
                    "properties":{
                      "matchExpressions":{
                        "description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items":{
                          "description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "properties":{
                            "key":{
                              "description":"key is the label key that the selector applies to.",
                              "type":"string"
                            },
                            "operator":{
                              "description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                              "type":"string"
                            },
                            "values":{
                              "description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                              "items":{
                                "type":"string"
                              },
                              "type":"array"
                            }
                          },
                          "required":[
                            "key",
                            "operator"
                          ],
                          "type":"object"
                        },
                        "type":"array"
                      },
                      "matchLabels":{
                        "additionalProperties":{
                          "type":"string"
                        },
                        "description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type":"object"
                      }
                    },
                    "type":"object"
                  },
                  "target":{
                    "description":"target is the described Kubernetes object.",
                    "properties":{
                      "apiVersion":{
                        "description":"API version of the referent",
                        "type":"string"
                      },
                      "kind":{
                        "description":"Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\"",
                        "type":"string"
                      },
                      "name":{
                        "description":"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type":"string"
                      }
                    },
                    "required":[
                      "kind",
                      "name"
                    ],
                    "type":"object"
                  },
                  "targetValue":{
                    "description":"targetValue is the target value of the metric (as a quantity).",
                    "type":"string"
                  }
                },
                "required":[
                  "target",
                  "metricName",
                  "targetValue"
                ],
                "type":"object"
              },
              "pods":{
                "description":"pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.",
                "properties":{
                  "metricName":{
                    "description":"metricName is the name of the metric in question",
                    "type":"string"
                  },
                  "selector":{
                    "description":"selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.",
                    "properties":{
                      "matchExpressions":{
                        "description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items":{
                          "description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "properties":{
                            "key":{
                              "description":"key is the label key that the selector applies to.",
                              "type":"string"
                            },
                            "operator":{
                              "description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                              "type":"string"
                            },
                            "values":{
                              "description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                              "items":{
                                "type":"string"
                              },
                              "type":"array"
                            }
                          },
                          "required":[
                            "key",
                            "operator"
                          ],
                          "type":"object"
                        },
                        "type":"array"
                      },
                      "matchLabels":{
                        "additionalProperties":{
                          "type":"string"
                        },
                        "description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type":"object"
                      }
                    },
                    "type":"object"
                  },
                  "targetAverageValue":{
                    "description":"targetAverageValue is the target value of the average of the metric across all relevant pods (as a quantity)",
                    "type":"string"
                  }
                },
                "required":[
                  "metricName",
                  "targetAverageValue"
                ],
                "type":"object"
              },
              "resource":{
                "description":"resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
                "properties":{
                  "name":{
                    "description":"name is the name of the resource in question.",
                    "type":"string"
                  },
                  "targetAverageUtilization":{
                    "description":"targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.",
                    "format":"int32",
                    "type":"integer"
                  },
                  "targetAverageValue":{
                    "description":"targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the \"pods\" metric source type.",
                    "type":"string"
                  }
                },
                "required":[
                  "name"
                ],
                "type":"object"
              },
              "type":{
                "description":"type is the type of metric source.  It should be one of \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object.",
                "type":"string"
              }
            },
            "required":[
              "type"
            ],
            "type":"object"
          },
          "type":"array"
        },
        "minReplicas":{
          "description":"minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.",
          "format":"int32",
          "type":"integer"
        },
        "scaleTargetRef":{
          "description":"scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.",
          "properties":{
            "apiVersion":{
              "description":"API version of the referent",
              "type":"string"
            },
            "kind":{
              "description":"Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\"",
              "type":"string"
            },
            "name":{
              "description":"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "type":"string"
            }
          },
          "required":[
            "kind",
            "name"
          ],
          "type":"object"
        }
      },
      "required":[
        "scaleTargetRef",
        "maxReplicas"
      ],
      "type":"object"
    },
    "status":{
      "description":"status is the current information about the autoscaler.",
      "properties":{
        "conditions":{
          "description":"conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.",
          "items":{
            "description":"HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.",
            "properties":{
              "lastTransitionTime":{
                "description":"lastTransitionTime is the last time the condition transitioned from one status to another",
                "format":"date-time",
                "type":"string"
              },
              "message":{
                "description":"message is a human-readable explanation containing details about the transition",
                "type":"string"
              },
              "reason":{
                "description":"reason is the reason for the condition's last transition.",
                "type":"string"
              },
              "status":{
                "description":"status is the status of the condition (True, False, Unknown)",
                "type":"string"
              },
              "type":{
                "description":"type describes the current condition",
                "type":"string"
              }
            },
            "required":[
              "type",
              "status"
            ],
            "type":"object"
          },
          "type":"array"
        },
        "currentMetrics":{
          "description":"currentMetrics is the last read state of the metrics used by this autoscaler.",
          "items":{
            "description":"MetricStatus describes the last-read state of a single metric.",
            "properties":{
              "external":{
                "description":"external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
                "properties":{
                  "currentAverageValue":{
                    "description":"currentAverageValue is the current value of metric averaged over autoscaled pods.",
                    "type":"string"
                  },
                  "currentValue":{
                    "description":"currentValue is the current value of the metric (as a quantity)",
                    "type":"string"
                  },
                  "metricName":{
                    "description":"metricName is the name of a metric used for autoscaling in metric system.",
                    "type":"string"
                  },
                  "metricSelector":{
                    "description":"metricSelector is used to identify a specific time series within a given metric.",
                    "properties":{
                      "matchExpressions":{
                        "description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items":{
                          "description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "properties":{
                            "key":{
                              "description":"key is the label key that the selector applies to.",
                              "type":"string"
                            },
                            "operator":{
                              "description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                              "type":"string"
                            },
                            "values":{
                              "description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                              "items":{
                                "type":"string"
                              },
                              "type":"array"
                            }
                          },
                          "required":[
                            "key",
                            "operator"
                          ],
                          "type":"object"
                        },
                        "type":"array"
                      },
                      "matchLabels":{
                        "additionalProperties":{
                          "type":"string"
                        },
                        "description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type":"object"
                      }
                    },
                    "type":"object"
                  }
                },
                "required":[
                  "metricName",
                  "currentValue"
                ],
                "type":"object"
              },
              "object":{
                "description":"object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).",
                "properties":{
                  "averageValue":{
                    "description":"averageValue is the current value of the average of the metric across all relevant pods (as a quantity)",
                    "type":"string"
                  },
                  "currentValue":{
                    "description":"currentValue is the current value of the metric (as a quantity).",
                    "type":"string"
                  },
                  "metricName":{
                    "description":"metricName is the name of the metric in question.",
                    "type":"string"
                  },
                  "selector":{
                    "description":"selector is the string-encoded form of a standard kubernetes label selector for the given metric When set in the ObjectMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.",
                    "properties":{
                      "matchExpressions":{
                        "description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items":{
                          "description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "properties":{
                            "key":{
                              "description":"key is the label key that the selector applies to.",
                              "type":"string"
                            },
                            "operator":{
                              "description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                              "type":"string"
                            },
                            "values":{
                              "description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                              "items":{
                                "type":"string"
                              },
                              "type":"array"
                            }
                          },
                          "required":[
                            "key",
                            "operator"
                          ],
                          "type":"object"
                        },
                        "type":"array"
                      },
                      "matchLabels":{
                        "additionalProperties":{
                          "type":"string"
                        },
                        "description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type":"object"
                      }
                    },
                    "type":"object"
                  },
                  "target":{
                    "description":"target is the described Kubernetes object.",
                    "properties":{
                      "apiVersion":{
                        "description":"API version of the referent",
                        "type":"string"
                      },
                      "kind":{
                        "description":"Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\"",
                        "type":"string"
                      },
                      "name":{
                        "description":"Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type":"string"
                      }
                    },
                    "required":[
                      "kind",
                      "name"
                    ],
                    "type":"object"
                  }
                },
                "required":[
                  "target",
                  "metricName",
                  "currentValue"
                ],
                "type":"object"
              },
              "pods":{
                "description":"pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.",
                "properties":{
                  "currentAverageValue":{
                    "description":"currentAverageValue is the current value of the average of the metric across all relevant pods (as a quantity)",
                    "type":"string"
                  },
                  "metricName":{
                    "description":"metricName is the name of the metric in question",
                    "type":"string"
                  },
                  "selector":{
                    "description":"selector is the string-encoded form of a standard kubernetes label selector for the given metric When set in the PodsMetricSource, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.",
                    "properties":{
                      "matchExpressions":{
                        "description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items":{
                          "description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "properties":{
                            "key":{
                              "description":"key is the label key that the selector applies to.",
                              "type":"string"
                            },
                            "operator":{
                              "description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                              "type":"string"
                            },
                            "values":{
                              "description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                              "items":{
                                "type":"string"
                              },
                              "type":"array"
                            }
                          },
                          "required":[
                            "key",
                            "operator"
                          ],
                          "type":"object"
                        },
                        "type":"array"
                      },
                      "matchLabels":{
                        "additionalProperties":{
                          "type":"string"
                        },
                        "description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type":"object"
                      }
                    },
                    "type":"object"
                  }
                },
                "required":[
                  "metricName",
                  "currentAverageValue"
                ],
                "type":"object"
              },
              "resource":{
                "description":"resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
                "properties":{
                  "currentAverageUtilization":{
                    "description":"currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.",
                    "format":"int32",
                    "type":"integer"
                  },
                  "currentAverageValue":{
                    "description":"currentAverageValue is the current value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the \"pods\" metric source type. It will always be set, regardless of the corresponding metric specification.",
                    "type":"string"
                  },
                  "name":{
                    "description":"name is the name of the resource in question.",
                    "type":"string"
                  }
                },
                "required":[
                  "name",
                  "currentAverageValue"
                ],
                "type":"object"
              },
              "type":{
                "description":"type is the type of metric source.  It will be one of \"Object\", \"Pods\" or \"Resource\", each corresponds to a matching field in the object.",
                "type":"string"
              }
            },
            "required":[
              "type"
            ],
            "type":"object"
          },
          "type":"array"
        },
        "currentReplicas":{
          "description":"currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.",
          "format":"int32",
          "type":"integer"
        },
        "desiredReplicas":{
          "description":"desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.",
          "format":"int32",
          "type":"integer"
        },
        "lastScaleTime":{
          "description":"lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed.",
          "format":"date-time",
          "type":"string"
        },
        "observedGeneration":{
          "description":"observedGeneration is the most recent generation observed by this autoscaler.",
          "format":"int64",
          "type":"integer"
        }
      },
      "required":[
        "currentReplicas",
        "desiredReplicas",
        "conditions"
      ],
      "type":"object"
    }
  },
  "type":"object",
  "x-kubernetes-group-version-kind":[
    {
      "group":"autoscaling",
      "kind":"HorizontalPodAutoscaler",
      "version":"v2beta1"
    }
  ]
}